'------------------------------------------------------------------------------
' <auto-generated>
'     Il codice è stato generato da uno strumento.
'     Versione runtime:4.0.30319.42000
'
'     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
'     il codice viene rigenerato.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DS_FE"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DS_FE
    Inherits Global.System.Data.DataSet
    
    Private tableDT_fatturaFE As DT_fatturaFEDataTable
    
    Private tableDT_righeFE As DT_righeFEDataTable
    
    Private tableDT_sommeFE As DT_sommeFEDataTable
    
    Private tableDT_trasmittente As DT_trasmittenteDataTable
    
    Private tableDT_azienda As DT_aziendaDataTable
    
    Private tabledtCodici_TD As dtCodici_TDDataTable
    
    Private tabledtEsteri As dtEsteriDataTable
    
    Private tabledtFatturaAutofattura As dtFatturaAutofatturaDataTable
    
    Private tabledtFatturaRigheAutofattura As dtFatturaRigheAutofatturaDataTable
    
    Private relationREL_fat_rig As Global.System.Data.DataRelation
    
    Private relationREL_somme As Global.System.Data.DataRelation
    
    Private relationDT_azienda_dtFatturaAutofattura As Global.System.Data.DataRelation
    
    Private relationdtFatturaAutofattura_dtFatturaRigheAutofattura As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("DT_fatturaFE")) Is Nothing) Then
                MyBase.Tables.Add(New DT_fatturaFEDataTable(ds.Tables("DT_fatturaFE")))
            End If
            If (Not (ds.Tables("DT_righeFE")) Is Nothing) Then
                MyBase.Tables.Add(New DT_righeFEDataTable(ds.Tables("DT_righeFE")))
            End If
            If (Not (ds.Tables("DT_sommeFE")) Is Nothing) Then
                MyBase.Tables.Add(New DT_sommeFEDataTable(ds.Tables("DT_sommeFE")))
            End If
            If (Not (ds.Tables("DT_trasmittente")) Is Nothing) Then
                MyBase.Tables.Add(New DT_trasmittenteDataTable(ds.Tables("DT_trasmittente")))
            End If
            If (Not (ds.Tables("DT_azienda")) Is Nothing) Then
                MyBase.Tables.Add(New DT_aziendaDataTable(ds.Tables("DT_azienda")))
            End If
            If (Not (ds.Tables("dtCodici_TD")) Is Nothing) Then
                MyBase.Tables.Add(New dtCodici_TDDataTable(ds.Tables("dtCodici_TD")))
            End If
            If (Not (ds.Tables("dtEsteri")) Is Nothing) Then
                MyBase.Tables.Add(New dtEsteriDataTable(ds.Tables("dtEsteri")))
            End If
            If (Not (ds.Tables("dtFatturaAutofattura")) Is Nothing) Then
                MyBase.Tables.Add(New dtFatturaAutofatturaDataTable(ds.Tables("dtFatturaAutofattura")))
            End If
            If (Not (ds.Tables("dtFatturaRigheAutofattura")) Is Nothing) Then
                MyBase.Tables.Add(New dtFatturaRigheAutofatturaDataTable(ds.Tables("dtFatturaRigheAutofattura")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DT_fatturaFE() As DT_fatturaFEDataTable
        Get
            Return Me.tableDT_fatturaFE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DT_righeFE() As DT_righeFEDataTable
        Get
            Return Me.tableDT_righeFE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DT_sommeFE() As DT_sommeFEDataTable
        Get
            Return Me.tableDT_sommeFE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DT_trasmittente() As DT_trasmittenteDataTable
        Get
            Return Me.tableDT_trasmittente
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property DT_azienda() As DT_aziendaDataTable
        Get
            Return Me.tableDT_azienda
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtCodici_TD() As dtCodici_TDDataTable
        Get
            Return Me.tabledtCodici_TD
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtEsteri() As dtEsteriDataTable
        Get
            Return Me.tabledtEsteri
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtFatturaAutofattura() As dtFatturaAutofatturaDataTable
        Get
            Return Me.tabledtFatturaAutofattura
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property dtFatturaRigheAutofattura() As dtFatturaRigheAutofatturaDataTable
        Get
            Return Me.tabledtFatturaRigheAutofattura
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DS_FE = CType(MyBase.Clone,DS_FE)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("DT_fatturaFE")) Is Nothing) Then
                MyBase.Tables.Add(New DT_fatturaFEDataTable(ds.Tables("DT_fatturaFE")))
            End If
            If (Not (ds.Tables("DT_righeFE")) Is Nothing) Then
                MyBase.Tables.Add(New DT_righeFEDataTable(ds.Tables("DT_righeFE")))
            End If
            If (Not (ds.Tables("DT_sommeFE")) Is Nothing) Then
                MyBase.Tables.Add(New DT_sommeFEDataTable(ds.Tables("DT_sommeFE")))
            End If
            If (Not (ds.Tables("DT_trasmittente")) Is Nothing) Then
                MyBase.Tables.Add(New DT_trasmittenteDataTable(ds.Tables("DT_trasmittente")))
            End If
            If (Not (ds.Tables("DT_azienda")) Is Nothing) Then
                MyBase.Tables.Add(New DT_aziendaDataTable(ds.Tables("DT_azienda")))
            End If
            If (Not (ds.Tables("dtCodici_TD")) Is Nothing) Then
                MyBase.Tables.Add(New dtCodici_TDDataTable(ds.Tables("dtCodici_TD")))
            End If
            If (Not (ds.Tables("dtEsteri")) Is Nothing) Then
                MyBase.Tables.Add(New dtEsteriDataTable(ds.Tables("dtEsteri")))
            End If
            If (Not (ds.Tables("dtFatturaAutofattura")) Is Nothing) Then
                MyBase.Tables.Add(New dtFatturaAutofatturaDataTable(ds.Tables("dtFatturaAutofattura")))
            End If
            If (Not (ds.Tables("dtFatturaRigheAutofattura")) Is Nothing) Then
                MyBase.Tables.Add(New dtFatturaRigheAutofatturaDataTable(ds.Tables("dtFatturaRigheAutofattura")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableDT_fatturaFE = CType(MyBase.Tables("DT_fatturaFE"),DT_fatturaFEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDT_fatturaFE) Is Nothing) Then
                Me.tableDT_fatturaFE.InitVars
            End If
        End If
        Me.tableDT_righeFE = CType(MyBase.Tables("DT_righeFE"),DT_righeFEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDT_righeFE) Is Nothing) Then
                Me.tableDT_righeFE.InitVars
            End If
        End If
        Me.tableDT_sommeFE = CType(MyBase.Tables("DT_sommeFE"),DT_sommeFEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDT_sommeFE) Is Nothing) Then
                Me.tableDT_sommeFE.InitVars
            End If
        End If
        Me.tableDT_trasmittente = CType(MyBase.Tables("DT_trasmittente"),DT_trasmittenteDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDT_trasmittente) Is Nothing) Then
                Me.tableDT_trasmittente.InitVars
            End If
        End If
        Me.tableDT_azienda = CType(MyBase.Tables("DT_azienda"),DT_aziendaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDT_azienda) Is Nothing) Then
                Me.tableDT_azienda.InitVars
            End If
        End If
        Me.tabledtCodici_TD = CType(MyBase.Tables("dtCodici_TD"),dtCodici_TDDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtCodici_TD) Is Nothing) Then
                Me.tabledtCodici_TD.InitVars
            End If
        End If
        Me.tabledtEsteri = CType(MyBase.Tables("dtEsteri"),dtEsteriDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtEsteri) Is Nothing) Then
                Me.tabledtEsteri.InitVars
            End If
        End If
        Me.tabledtFatturaAutofattura = CType(MyBase.Tables("dtFatturaAutofattura"),dtFatturaAutofatturaDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtFatturaAutofattura) Is Nothing) Then
                Me.tabledtFatturaAutofattura.InitVars
            End If
        End If
        Me.tabledtFatturaRigheAutofattura = CType(MyBase.Tables("dtFatturaRigheAutofattura"),dtFatturaRigheAutofatturaDataTable)
        If (initTable = true) Then
            If (Not (Me.tabledtFatturaRigheAutofattura) Is Nothing) Then
                Me.tabledtFatturaRigheAutofattura.InitVars
            End If
        End If
        Me.relationREL_fat_rig = Me.Relations("REL_fat_rig")
        Me.relationREL_somme = Me.Relations("REL_somme")
        Me.relationDT_azienda_dtFatturaAutofattura = Me.Relations("DT_azienda_dtFatturaAutofattura")
        Me.relationdtFatturaAutofattura_dtFatturaRigheAutofattura = Me.Relations("dtFatturaAutofattura_dtFatturaRigheAutofattura")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DS_FE"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DS_FE.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableDT_fatturaFE = New DT_fatturaFEDataTable()
        MyBase.Tables.Add(Me.tableDT_fatturaFE)
        Me.tableDT_righeFE = New DT_righeFEDataTable()
        MyBase.Tables.Add(Me.tableDT_righeFE)
        Me.tableDT_sommeFE = New DT_sommeFEDataTable()
        MyBase.Tables.Add(Me.tableDT_sommeFE)
        Me.tableDT_trasmittente = New DT_trasmittenteDataTable()
        MyBase.Tables.Add(Me.tableDT_trasmittente)
        Me.tableDT_azienda = New DT_aziendaDataTable()
        MyBase.Tables.Add(Me.tableDT_azienda)
        Me.tabledtCodici_TD = New dtCodici_TDDataTable()
        MyBase.Tables.Add(Me.tabledtCodici_TD)
        Me.tabledtEsteri = New dtEsteriDataTable()
        MyBase.Tables.Add(Me.tabledtEsteri)
        Me.tabledtFatturaAutofattura = New dtFatturaAutofatturaDataTable()
        MyBase.Tables.Add(Me.tabledtFatturaAutofattura)
        Me.tabledtFatturaRigheAutofattura = New dtFatturaRigheAutofatturaDataTable()
        MyBase.Tables.Add(Me.tabledtFatturaRigheAutofattura)
        Me.relationREL_fat_rig = New Global.System.Data.DataRelation("REL_fat_rig", New Global.System.Data.DataColumn() {Me.tableDT_fatturaFE.fat_num_daColumn}, New Global.System.Data.DataColumn() {Me.tableDT_righeFE.cfa_fa_numColumn}, false)
        Me.Relations.Add(Me.relationREL_fat_rig)
        Me.relationREL_somme = New Global.System.Data.DataRelation("REL_somme", New Global.System.Data.DataColumn() {Me.tableDT_fatturaFE.fat_num_daColumn}, New Global.System.Data.DataColumn() {Me.tableDT_sommeFE.cfa_fa_numColumn}, false)
        Me.Relations.Add(Me.relationREL_somme)
        Me.relationDT_azienda_dtFatturaAutofattura = New Global.System.Data.DataRelation("DT_azienda_dtFatturaAutofattura", New Global.System.Data.DataColumn() {Me.tableDT_azienda.idColumn}, New Global.System.Data.DataColumn() {Me.tabledtFatturaAutofattura.fat_cli_idColumn}, false)
        Me.Relations.Add(Me.relationDT_azienda_dtFatturaAutofattura)
        Me.relationdtFatturaAutofattura_dtFatturaRigheAutofattura = New Global.System.Data.DataRelation("dtFatturaAutofattura_dtFatturaRigheAutofattura", New Global.System.Data.DataColumn() {Me.tabledtFatturaAutofattura.fat_num_daColumn}, New Global.System.Data.DataColumn() {Me.tabledtFatturaRigheAutofattura.cfa_fa_numColumn}, false)
        Me.Relations.Add(Me.relationdtFatturaAutofattura_dtFatturaRigheAutofattura)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeDT_fatturaFE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeDT_righeFE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeDT_sommeFE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeDT_trasmittente() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializeDT_azienda() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtCodici_TD() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtEsteri() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtFatturaAutofattura() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Function ShouldSerializedtFatturaRigheAutofattura() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DS_FE = New DS_FE()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub DT_fatturaFERowChangeEventHandler(ByVal sender As Object, ByVal e As DT_fatturaFERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub DT_righeFERowChangeEventHandler(ByVal sender As Object, ByVal e As DT_righeFERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub DT_sommeFERowChangeEventHandler(ByVal sender As Object, ByVal e As DT_sommeFERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub DT_trasmittenteRowChangeEventHandler(ByVal sender As Object, ByVal e As DT_trasmittenteRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub DT_aziendaRowChangeEventHandler(ByVal sender As Object, ByVal e As DT_aziendaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtCodici_TDRowChangeEventHandler(ByVal sender As Object, ByVal e As dtCodici_TDRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtEsteriRowChangeEventHandler(ByVal sender As Object, ByVal e As dtEsteriRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtFatturaAutofatturaRowChangeEventHandler(ByVal sender As Object, ByVal e As dtFatturaAutofatturaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Delegate Sub dtFatturaRigheAutofatturaRowChangeEventHandler(ByVal sender As Object, ByVal e As dtFatturaRigheAutofatturaRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DT_fatturaFEDataTable
        Inherits Global.System.Data.TypedTableBase(Of DT_fatturaFERow)
        
        Private columnfat_num_da As Global.System.Data.DataColumn
        
        Private columnfat_cli_id As Global.System.Data.DataColumn
        
        Private columnfat_data As Global.System.Data.DataColumn
        
        Private columnfat_scad As Global.System.Data.DataColumn
        
        Private columnfat_cod_iva As Global.System.Data.DataColumn
        
        Private columnsocieta As Global.System.Data.DataColumn
        
        Private columnaddress As Global.System.Data.DataColumn
        
        Private columnpostalcode As Global.System.Data.DataColumn
        
        Private columncity As Global.System.Data.DataColumn
        
        Private columnregion As Global.System.Data.DataColumn
        
        Private columnstate As Global.System.Data.DataColumn
        
        Private columnemail_name As Global.System.Data.DataColumn
        
        Private columnpartitaiva As Global.System.Data.DataColumn
        
        Private columncondomino As Global.System.Data.DataColumn
        
        Private column114_codicedestinatario As Global.System.Data.DataColumn
        
        Private column116_pecdestinatario As Global.System.Data.DataColumn
        
        Private columncf As Global.System.Data.DataColumn
        
        Private columndes As Global.System.Data.DataColumn
        
        Private columnbancaappog As Global.System.Data.DataColumn
        
        Private columnmodalitaFE As Global.System.Data.DataColumn
        
        Private columnricerca As Global.System.Data.DataColumn
        
        Private columnfat_nc As Global.System.Data.DataColumn
        
        Private columnpa As Global.System.Data.DataColumn
        
        Private columnl_mobile As Global.System.Data.DataColumn
        
        Private columnidfatturaunq As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DT_fatturaFE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_num_daColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_num_da
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_cli_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_cli_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_dataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_data
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_scadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_scad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_cod_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_cod_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property societaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsocieta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property postalcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpostalcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property regionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnregion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property email_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property partitaivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartitaiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property condominoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncondomino
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property _114_codicedestinatarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column114_codicedestinatario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property _116_pecdestinatarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.column116_pecdestinatario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncf
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property desColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndes
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property bancaappogColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbancaappog
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property modalitaFEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnmodalitaFE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ricercaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnricerca
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_ncColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_nc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property paColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property l_mobileColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnl_mobile
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property idfatturaunqColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidfatturaunq
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DT_fatturaFERow
            Get
                Return CType(Me.Rows(index),DT_fatturaFERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_fatturaFERowChanging As DT_fatturaFERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_fatturaFERowChanged As DT_fatturaFERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_fatturaFERowDeleting As DT_fatturaFERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_fatturaFERowDeleted As DT_fatturaFERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddDT_fatturaFERow(ByVal row As DT_fatturaFERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddDT_fatturaFERow( _
                    ByVal fat_num_da As String,  _
                    ByVal fat_cli_id As Integer,  _
                    ByVal fat_data As Date,  _
                    ByVal fat_scad As Date,  _
                    ByVal fat_cod_iva As Decimal,  _
                    ByVal societa As String,  _
                    ByVal address As String,  _
                    ByVal postalcode As String,  _
                    ByVal city As String,  _
                    ByVal _region As String,  _
                    ByVal state As String,  _
                    ByVal email_name As String,  _
                    ByVal partitaiva As String,  _
                    ByVal condomino As Integer,  _
                    ByVal _114_codicedestinatario As String,  _
                    ByVal _116_pecdestinatario As String,  _
                    ByVal cf As String,  _
                    ByVal des As String,  _
                    ByVal bancaappog As String,  _
                    ByVal modalitaFE As String,  _
                    ByVal ricerca As String,  _
                    ByVal fat_nc As Short,  _
                    ByVal pa As Short,  _
                    ByVal l_mobile As Integer,  _
                    ByVal idfatturaunq As Integer) As DT_fatturaFERow
            Dim rowDT_fatturaFERow As DT_fatturaFERow = CType(Me.NewRow,DT_fatturaFERow)
            Dim columnValuesArray() As Object = New Object() {fat_num_da, fat_cli_id, fat_data, fat_scad, fat_cod_iva, societa, address, postalcode, city, _region, state, email_name, partitaiva, condomino, _114_codicedestinatario, _116_pecdestinatario, cf, des, bancaappog, modalitaFE, ricerca, fat_nc, pa, l_mobile, idfatturaunq}
            rowDT_fatturaFERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDT_fatturaFERow)
            Return rowDT_fatturaFERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DT_fatturaFEDataTable = CType(MyBase.Clone,DT_fatturaFEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DT_fatturaFEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnfat_num_da = MyBase.Columns("fat_num_da")
            Me.columnfat_cli_id = MyBase.Columns("fat_cli_id")
            Me.columnfat_data = MyBase.Columns("fat_data")
            Me.columnfat_scad = MyBase.Columns("fat_scad")
            Me.columnfat_cod_iva = MyBase.Columns("fat_cod_iva")
            Me.columnsocieta = MyBase.Columns("societa")
            Me.columnaddress = MyBase.Columns("address")
            Me.columnpostalcode = MyBase.Columns("postalcode")
            Me.columncity = MyBase.Columns("city")
            Me.columnregion = MyBase.Columns("region")
            Me.columnstate = MyBase.Columns("state")
            Me.columnemail_name = MyBase.Columns("email_name")
            Me.columnpartitaiva = MyBase.Columns("partitaiva")
            Me.columncondomino = MyBase.Columns("condomino")
            Me.column114_codicedestinatario = MyBase.Columns("114_codicedestinatario")
            Me.column116_pecdestinatario = MyBase.Columns("116_pecdestinatario")
            Me.columncf = MyBase.Columns("cf")
            Me.columndes = MyBase.Columns("des")
            Me.columnbancaappog = MyBase.Columns("bancaappog")
            Me.columnmodalitaFE = MyBase.Columns("modalitaFE")
            Me.columnricerca = MyBase.Columns("ricerca")
            Me.columnfat_nc = MyBase.Columns("fat_nc")
            Me.columnpa = MyBase.Columns("pa")
            Me.columnl_mobile = MyBase.Columns("l_mobile")
            Me.columnidfatturaunq = MyBase.Columns("idfatturaunq")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnfat_num_da = New Global.System.Data.DataColumn("fat_num_da", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_num_da)
            Me.columnfat_cli_id = New Global.System.Data.DataColumn("fat_cli_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_cli_id)
            Me.columnfat_data = New Global.System.Data.DataColumn("fat_data", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_data)
            Me.columnfat_scad = New Global.System.Data.DataColumn("fat_scad", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_scad)
            Me.columnfat_cod_iva = New Global.System.Data.DataColumn("fat_cod_iva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_cod_iva)
            Me.columnsocieta = New Global.System.Data.DataColumn("societa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsocieta)
            Me.columnaddress = New Global.System.Data.DataColumn("address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress)
            Me.columnpostalcode = New Global.System.Data.DataColumn("postalcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpostalcode)
            Me.columncity = New Global.System.Data.DataColumn("city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncity)
            Me.columnregion = New Global.System.Data.DataColumn("region", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnregion.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "regionColumn")
            Me.columnregion.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnregion")
            Me.columnregion.ExtendedProperties.Add("Generator_UserColumnName", "region")
            MyBase.Columns.Add(Me.columnregion)
            Me.columnstate = New Global.System.Data.DataColumn("state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstate)
            Me.columnemail_name = New Global.System.Data.DataColumn("email_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail_name)
            Me.columnpartitaiva = New Global.System.Data.DataColumn("partitaiva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartitaiva)
            Me.columncondomino = New Global.System.Data.DataColumn("condomino", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncondomino)
            Me.column114_codicedestinatario = New Global.System.Data.DataColumn("114_codicedestinatario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.column114_codicedestinatario.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column114_codicedestinatario")
            Me.column114_codicedestinatario.ExtendedProperties.Add("Generator_UserColumnName", "114_codicedestinatario")
            MyBase.Columns.Add(Me.column114_codicedestinatario)
            Me.column116_pecdestinatario = New Global.System.Data.DataColumn("116_pecdestinatario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.column116_pecdestinatario.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "column116_pecdestinatario")
            Me.column116_pecdestinatario.ExtendedProperties.Add("Generator_UserColumnName", "116_pecdestinatario")
            MyBase.Columns.Add(Me.column116_pecdestinatario)
            Me.columncf = New Global.System.Data.DataColumn("cf", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncf)
            Me.columndes = New Global.System.Data.DataColumn("des", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndes)
            Me.columnbancaappog = New Global.System.Data.DataColumn("bancaappog", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbancaappog)
            Me.columnmodalitaFE = New Global.System.Data.DataColumn("modalitaFE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnmodalitaFE)
            Me.columnricerca = New Global.System.Data.DataColumn("ricerca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnricerca)
            Me.columnfat_nc = New Global.System.Data.DataColumn("fat_nc", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_nc)
            Me.columnpa = New Global.System.Data.DataColumn("pa", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpa)
            Me.columnl_mobile = New Global.System.Data.DataColumn("l_mobile", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnl_mobile)
            Me.columnidfatturaunq = New Global.System.Data.DataColumn("idfatturaunq", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidfatturaunq)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnfat_num_da}, false))
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint2", New Global.System.Data.DataColumn() {Me.columnidfatturaunq}, false))
            Me.columnfat_num_da.AllowDBNull = false
            Me.columnfat_num_da.Unique = true
            Me.columnfat_num_da.MaxLength = 10
            Me.columnfat_cli_id.AllowDBNull = false
            Me.columnfat_data.AllowDBNull = false
            Me.columnfat_cod_iva.AllowDBNull = false
            Me.columnsocieta.MaxLength = 75
            Me.columnaddress.MaxLength = 67
            Me.columnpostalcode.MaxLength = 7
            Me.columncity.MaxLength = 39
            Me.columnregion.MaxLength = 3
            Me.columnstate.MaxLength = 9
            Me.columnemail_name.MaxLength = 55
            Me.columnpartitaiva.MaxLength = 22
            Me.column114_codicedestinatario.DefaultValue = CType("000000",String)
            Me.column114_codicedestinatario.MaxLength = 8
            Me.column116_pecdestinatario.DefaultValue = CType("""""",String)
            Me.column116_pecdestinatario.MaxLength = 45
            Me.columncf.MaxLength = 45
            Me.columndes.AllowDBNull = false
            Me.columndes.MaxLength = 100
            Me.columnbancaappog.MaxLength = 103
            Me.columnmodalitaFE.MaxLength = 5
            Me.columnricerca.ReadOnly = true
            Me.columnricerca.MaxLength = 90
            Me.columnl_mobile.AllowDBNull = false
            Me.columnidfatturaunq.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewDT_fatturaFERow() As DT_fatturaFERow
            Return CType(Me.NewRow,DT_fatturaFERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DT_fatturaFERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DT_fatturaFERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DT_fatturaFERowChangedEvent) Is Nothing) Then
                RaiseEvent DT_fatturaFERowChanged(Me, New DT_fatturaFERowChangeEvent(CType(e.Row,DT_fatturaFERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DT_fatturaFERowChangingEvent) Is Nothing) Then
                RaiseEvent DT_fatturaFERowChanging(Me, New DT_fatturaFERowChangeEvent(CType(e.Row,DT_fatturaFERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DT_fatturaFERowDeletedEvent) Is Nothing) Then
                RaiseEvent DT_fatturaFERowDeleted(Me, New DT_fatturaFERowChangeEvent(CType(e.Row,DT_fatturaFERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DT_fatturaFERowDeletingEvent) Is Nothing) Then
                RaiseEvent DT_fatturaFERowDeleting(Me, New DT_fatturaFERowChangeEvent(CType(e.Row,DT_fatturaFERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveDT_fatturaFERow(ByVal row As DT_fatturaFERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_FE = New DS_FE()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DT_fatturaFEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DT_righeFEDataTable
        Inherits Global.System.Data.TypedTableBase(Of DT_righeFERow)
        
        Private columnordine As Global.System.Data.DataColumn
        
        Private columncfa_des As Global.System.Data.DataColumn
        
        Private columncfa_quanti As Global.System.Data.DataColumn
        
        Private columncfa_prezzo As Global.System.Data.DataColumn
        
        Private columncfa_sconto As Global.System.Data.DataColumn
        
        Private columncfa_pulofor As Global.System.Data.DataColumn
        
        Private columncfa_fa_num As Global.System.Data.DataColumn
        
        Private columnnome As Global.System.Data.DataColumn
        
        Private columnnomebreve As Global.System.Data.DataColumn
        
        Private columndescrizione As Global.System.Data.DataColumn
        
        Private columnvaloreiva As Global.System.Data.DataColumn
        
        Private columnpagata As Global.System.Data.DataColumn
        
        Private columncod_FE As Global.System.Data.DataColumn
        
        Private columniva As Global.System.Data.DataColumn
        
        Private columncod_iva As Global.System.Data.DataColumn
        
        Private columnfat_data As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DT_righeFE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ordineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnordine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_desColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_des
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_quantiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_quanti
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_prezzoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_prezzo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_scontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_sconto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_puloforColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_pulofor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_fa_numColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_fa_num
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nomeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnome
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property nomebreveColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnomebreve
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property valoreivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvaloreiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property pagataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpagata
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cod_FEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_FE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columniva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cod_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_dataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_data
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DT_righeFERow
            Get
                Return CType(Me.Rows(index),DT_righeFERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_righeFERowChanging As DT_righeFERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_righeFERowChanged As DT_righeFERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_righeFERowDeleting As DT_righeFERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_righeFERowDeleted As DT_righeFERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddDT_righeFERow(ByVal row As DT_righeFERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddDT_righeFERow( _
                    ByVal ordine As Integer,  _
                    ByVal cfa_des As String,  _
                    ByVal cfa_quanti As Decimal,  _
                    ByVal cfa_prezzo As Decimal,  _
                    ByVal cfa_sconto As Decimal,  _
                    ByVal cfa_pulofor As Integer,  _
                    ByVal parentDT_fatturaFERowByREL_fat_rig As DT_fatturaFERow,  _
                    ByVal nome As String,  _
                    ByVal nomebreve As String,  _
                    ByVal descrizione As String,  _
                    ByVal valoreiva As Decimal,  _
                    ByVal pagata As Short,  _
                    ByVal cod_FE As String,  _
                    ByVal iva As Decimal,  _
                    ByVal cod_iva As Integer,  _
                    ByVal fat_data As Date) As DT_righeFERow
            Dim rowDT_righeFERow As DT_righeFERow = CType(Me.NewRow,DT_righeFERow)
            Dim columnValuesArray() As Object = New Object() {ordine, cfa_des, cfa_quanti, cfa_prezzo, cfa_sconto, cfa_pulofor, Nothing, nome, nomebreve, descrizione, valoreiva, pagata, cod_FE, iva, cod_iva, fat_data}
            If (Not (parentDT_fatturaFERowByREL_fat_rig) Is Nothing) Then
                columnValuesArray(6) = parentDT_fatturaFERowByREL_fat_rig(0)
            End If
            rowDT_righeFERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDT_righeFERow)
            Return rowDT_righeFERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DT_righeFEDataTable = CType(MyBase.Clone,DT_righeFEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DT_righeFEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnordine = MyBase.Columns("ordine")
            Me.columncfa_des = MyBase.Columns("cfa_des")
            Me.columncfa_quanti = MyBase.Columns("cfa_quanti")
            Me.columncfa_prezzo = MyBase.Columns("cfa_prezzo")
            Me.columncfa_sconto = MyBase.Columns("cfa_sconto")
            Me.columncfa_pulofor = MyBase.Columns("cfa_pulofor")
            Me.columncfa_fa_num = MyBase.Columns("cfa_fa_num")
            Me.columnnome = MyBase.Columns("nome")
            Me.columnnomebreve = MyBase.Columns("nomebreve")
            Me.columndescrizione = MyBase.Columns("descrizione")
            Me.columnvaloreiva = MyBase.Columns("valoreiva")
            Me.columnpagata = MyBase.Columns("pagata")
            Me.columncod_FE = MyBase.Columns("cod_FE")
            Me.columniva = MyBase.Columns("iva")
            Me.columncod_iva = MyBase.Columns("cod_iva")
            Me.columnfat_data = MyBase.Columns("fat_data")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnordine = New Global.System.Data.DataColumn("ordine", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnordine)
            Me.columncfa_des = New Global.System.Data.DataColumn("cfa_des", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_des)
            Me.columncfa_quanti = New Global.System.Data.DataColumn("cfa_quanti", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_quanti)
            Me.columncfa_prezzo = New Global.System.Data.DataColumn("cfa_prezzo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_prezzo)
            Me.columncfa_sconto = New Global.System.Data.DataColumn("cfa_sconto", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_sconto)
            Me.columncfa_pulofor = New Global.System.Data.DataColumn("cfa_pulofor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_pulofor)
            Me.columncfa_fa_num = New Global.System.Data.DataColumn("cfa_fa_num", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_fa_num)
            Me.columnnome = New Global.System.Data.DataColumn("nome", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnome)
            Me.columnnomebreve = New Global.System.Data.DataColumn("nomebreve", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnomebreve)
            Me.columndescrizione = New Global.System.Data.DataColumn("descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescrizione)
            Me.columnvaloreiva = New Global.System.Data.DataColumn("valoreiva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvaloreiva)
            Me.columnpagata = New Global.System.Data.DataColumn("pagata", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpagata)
            Me.columncod_FE = New Global.System.Data.DataColumn("cod_FE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_FE)
            Me.columniva = New Global.System.Data.DataColumn("iva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columniva)
            Me.columncod_iva = New Global.System.Data.DataColumn("cod_iva", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_iva)
            Me.columnfat_data = New Global.System.Data.DataColumn("fat_data", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_data)
            Me.columnordine.AllowDBNull = false
            Me.columncfa_des.AllowDBNull = false
            Me.columncfa_des.MaxLength = 254
            Me.columncfa_quanti.AllowDBNull = false
            Me.columncfa_prezzo.AllowDBNull = false
            Me.columncfa_sconto.AllowDBNull = false
            Me.columncfa_pulofor.AllowDBNull = false
            Me.columncfa_fa_num.AllowDBNull = false
            Me.columncfa_fa_num.MaxLength = 10
            Me.columnnome.MaxLength = 20
            Me.columnnomebreve.MaxLength = 4
            Me.columndescrizione.MaxLength = 60
            Me.columncod_FE.MaxLength = 20
            Me.columniva.AllowDBNull = false
            Me.columncod_iva.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewDT_righeFERow() As DT_righeFERow
            Return CType(Me.NewRow,DT_righeFERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DT_righeFERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DT_righeFERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DT_righeFERowChangedEvent) Is Nothing) Then
                RaiseEvent DT_righeFERowChanged(Me, New DT_righeFERowChangeEvent(CType(e.Row,DT_righeFERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DT_righeFERowChangingEvent) Is Nothing) Then
                RaiseEvent DT_righeFERowChanging(Me, New DT_righeFERowChangeEvent(CType(e.Row,DT_righeFERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DT_righeFERowDeletedEvent) Is Nothing) Then
                RaiseEvent DT_righeFERowDeleted(Me, New DT_righeFERowChangeEvent(CType(e.Row,DT_righeFERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DT_righeFERowDeletingEvent) Is Nothing) Then
                RaiseEvent DT_righeFERowDeleting(Me, New DT_righeFERowChangeEvent(CType(e.Row,DT_righeFERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveDT_righeFERow(ByVal row As DT_righeFERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_FE = New DS_FE()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DT_righeFEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DT_sommeFEDataTable
        Inherits Global.System.Data.TypedTableBase(Of DT_sommeFERow)
        
        Private columntotale As Global.System.Data.DataColumn
        
        Private columnscontato As Global.System.Data.DataColumn
        
        Private columnimposta As Global.System.Data.DataColumn
        
        Private columncfa_fa_num As Global.System.Data.DataColumn
        
        Private columncfa_rc As Global.System.Data.DataColumn
        
        Private columndescrizione As Global.System.Data.DataColumn
        
        Private columnvaloreiva As Global.System.Data.DataColumn
        
        Private columncod_FE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DT_sommeFE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property totaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property scontatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnscontato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property impostaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimposta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_fa_numColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_fa_num
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_rcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_rc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property valoreivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvaloreiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cod_FEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncod_FE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DT_sommeFERow
            Get
                Return CType(Me.Rows(index),DT_sommeFERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_sommeFERowChanging As DT_sommeFERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_sommeFERowChanged As DT_sommeFERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_sommeFERowDeleting As DT_sommeFERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_sommeFERowDeleted As DT_sommeFERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddDT_sommeFERow(ByVal row As DT_sommeFERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddDT_sommeFERow(ByVal totale As Decimal, ByVal scontato As Decimal, ByVal imposta As Decimal, ByVal parentDT_fatturaFERowByREL_somme As DT_fatturaFERow, ByVal cfa_rc As Integer, ByVal descrizione As String, ByVal valoreiva As Decimal, ByVal cod_FE As String) As DT_sommeFERow
            Dim rowDT_sommeFERow As DT_sommeFERow = CType(Me.NewRow,DT_sommeFERow)
            Dim columnValuesArray() As Object = New Object() {totale, scontato, imposta, Nothing, cfa_rc, descrizione, valoreiva, cod_FE}
            If (Not (parentDT_fatturaFERowByREL_somme) Is Nothing) Then
                columnValuesArray(3) = parentDT_fatturaFERowByREL_somme(0)
            End If
            rowDT_sommeFERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDT_sommeFERow)
            Return rowDT_sommeFERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DT_sommeFEDataTable = CType(MyBase.Clone,DT_sommeFEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DT_sommeFEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columntotale = MyBase.Columns("totale")
            Me.columnscontato = MyBase.Columns("scontato")
            Me.columnimposta = MyBase.Columns("imposta")
            Me.columncfa_fa_num = MyBase.Columns("cfa_fa_num")
            Me.columncfa_rc = MyBase.Columns("cfa_rc")
            Me.columndescrizione = MyBase.Columns("descrizione")
            Me.columnvaloreiva = MyBase.Columns("valoreiva")
            Me.columncod_FE = MyBase.Columns("cod_FE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columntotale = New Global.System.Data.DataColumn("totale", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotale)
            Me.columnscontato = New Global.System.Data.DataColumn("scontato", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnscontato)
            Me.columnimposta = New Global.System.Data.DataColumn("imposta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimposta)
            Me.columncfa_fa_num = New Global.System.Data.DataColumn("cfa_fa_num", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_fa_num)
            Me.columncfa_rc = New Global.System.Data.DataColumn("cfa_rc", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_rc)
            Me.columndescrizione = New Global.System.Data.DataColumn("descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescrizione)
            Me.columnvaloreiva = New Global.System.Data.DataColumn("valoreiva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvaloreiva)
            Me.columncod_FE = New Global.System.Data.DataColumn("cod_FE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncod_FE)
            Me.columntotale.ReadOnly = true
            Me.columnscontato.ReadOnly = true
            Me.columnimposta.ReadOnly = true
            Me.columncfa_fa_num.AllowDBNull = false
            Me.columncfa_fa_num.MaxLength = 10
            Me.columncfa_rc.AllowDBNull = false
            Me.columndescrizione.AllowDBNull = false
            Me.columndescrizione.MaxLength = 60
            Me.columnvaloreiva.AllowDBNull = false
            Me.columncod_FE.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewDT_sommeFERow() As DT_sommeFERow
            Return CType(Me.NewRow,DT_sommeFERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DT_sommeFERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DT_sommeFERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DT_sommeFERowChangedEvent) Is Nothing) Then
                RaiseEvent DT_sommeFERowChanged(Me, New DT_sommeFERowChangeEvent(CType(e.Row,DT_sommeFERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DT_sommeFERowChangingEvent) Is Nothing) Then
                RaiseEvent DT_sommeFERowChanging(Me, New DT_sommeFERowChangeEvent(CType(e.Row,DT_sommeFERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DT_sommeFERowDeletedEvent) Is Nothing) Then
                RaiseEvent DT_sommeFERowDeleted(Me, New DT_sommeFERowChangeEvent(CType(e.Row,DT_sommeFERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DT_sommeFERowDeletingEvent) Is Nothing) Then
                RaiseEvent DT_sommeFERowDeleting(Me, New DT_sommeFERowChangeEvent(CType(e.Row,DT_sommeFERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveDT_sommeFERow(ByVal row As DT_sommeFERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_FE = New DS_FE()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DT_sommeFEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DT_trasmittenteDataTable
        Inherits Global.System.Data.TypedTableBase(Of DT_trasmittenteRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnidPaese As Global.System.Data.DataColumn
        
        Private columnidCodice As Global.System.Data.DataColumn
        
        Private columnTelefono As Global.System.Data.DataColumn
        
        Private columnEmail As Global.System.Data.DataColumn
        
        Private columnNominativo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DT_trasmittente"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property idPaeseColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidPaese
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property idCodiceColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidCodice
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property TelefonoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTelefono
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property EmailColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmail
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NominativoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNominativo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DT_trasmittenteRow
            Get
                Return CType(Me.Rows(index),DT_trasmittenteRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_trasmittenteRowChanging As DT_trasmittenteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_trasmittenteRowChanged As DT_trasmittenteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_trasmittenteRowDeleting As DT_trasmittenteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_trasmittenteRowDeleted As DT_trasmittenteRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddDT_trasmittenteRow(ByVal row As DT_trasmittenteRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddDT_trasmittenteRow(ByVal idPaese As String, ByVal idCodice As String, ByVal Telefono As String, ByVal Email As String, ByVal Nominativo As String) As DT_trasmittenteRow
            Dim rowDT_trasmittenteRow As DT_trasmittenteRow = CType(Me.NewRow,DT_trasmittenteRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, idPaese, idCodice, Telefono, Email, Nominativo}
            rowDT_trasmittenteRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDT_trasmittenteRow)
            Return rowDT_trasmittenteRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DT_trasmittenteDataTable = CType(MyBase.Clone,DT_trasmittenteDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DT_trasmittenteDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnidPaese = MyBase.Columns("idPaese")
            Me.columnidCodice = MyBase.Columns("idCodice")
            Me.columnTelefono = MyBase.Columns("Telefono")
            Me.columnEmail = MyBase.Columns("Email")
            Me.columnNominativo = MyBase.Columns("Nominativo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnidPaese = New Global.System.Data.DataColumn("idPaese", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidPaese)
            Me.columnidCodice = New Global.System.Data.DataColumn("idCodice", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidCodice)
            Me.columnTelefono = New Global.System.Data.DataColumn("Telefono", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTelefono)
            Me.columnEmail = New Global.System.Data.DataColumn("Email", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmail)
            Me.columnNominativo = New Global.System.Data.DataColumn("Nominativo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNominativo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, false))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.Unique = true
            Me.columnidPaese.MaxLength = 6
            Me.columnidCodice.DefaultValue = CType("000000",String)
            Me.columnidCodice.MaxLength = 11
            Me.columnTelefono.MaxLength = 45
            Me.columnEmail.MaxLength = 45
            Me.columnNominativo.MaxLength = 45
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewDT_trasmittenteRow() As DT_trasmittenteRow
            Return CType(Me.NewRow,DT_trasmittenteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DT_trasmittenteRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DT_trasmittenteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DT_trasmittenteRowChangedEvent) Is Nothing) Then
                RaiseEvent DT_trasmittenteRowChanged(Me, New DT_trasmittenteRowChangeEvent(CType(e.Row,DT_trasmittenteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DT_trasmittenteRowChangingEvent) Is Nothing) Then
                RaiseEvent DT_trasmittenteRowChanging(Me, New DT_trasmittenteRowChangeEvent(CType(e.Row,DT_trasmittenteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DT_trasmittenteRowDeletedEvent) Is Nothing) Then
                RaiseEvent DT_trasmittenteRowDeleted(Me, New DT_trasmittenteRowChangeEvent(CType(e.Row,DT_trasmittenteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DT_trasmittenteRowDeletingEvent) Is Nothing) Then
                RaiseEvent DT_trasmittenteRowDeleting(Me, New DT_trasmittenteRowChangeEvent(CType(e.Row,DT_trasmittenteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveDT_trasmittenteRow(ByVal row As DT_trasmittenteRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_FE = New DS_FE()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DT_trasmittenteDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DT_aziendaDataTable
        Inherits Global.System.Data.TypedTableBase(Of DT_aziendaRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnragione_sociale As Global.System.Data.DataColumn
        
        Private columnindirizzo_leg As Global.System.Data.DataColumn
        
        Private columnlocalita_leg As Global.System.Data.DataColumn
        
        Private columncap_leg As Global.System.Data.DataColumn
        
        Private columnprovincia_leg As Global.System.Data.DataColumn
        
        Private columnindirizzo_ope As Global.System.Data.DataColumn
        
        Private columnlocalita_ope As Global.System.Data.DataColumn
        
        Private columncap_ope As Global.System.Data.DataColumn
        
        Private columnprovincia_ope As Global.System.Data.DataColumn
        
        Private columnvalore_IVA As Global.System.Data.DataColumn
        
        Private columnvalore_ritenuta As Global.System.Data.DataColumn
        
        Private columnlogo_grande As Global.System.Data.DataColumn
        
        Private columnlogo_piccolo As Global.System.Data.DataColumn
        
        Private columnpartita_IVA As Global.System.Data.DataColumn
        
        Private columncciaa As Global.System.Data.DataColumn
        
        Private columncodicefiscale As Global.System.Data.DataColumn
        
        Private columncapitale_cap As Global.System.Data.DataColumn
        
        Private columndata_attivita As Global.System.Data.DataColumn
        
        Private columnNazione As Global.System.Data.DataColumn
        
        Private columnautofatturazione As Global.System.Data.DataColumn
        
        Private columnidSDI As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "DT_azienda"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ragione_socialeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnragione_sociale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property indirizzo_legColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnindirizzo_leg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property localita_legColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlocalita_leg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cap_legColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncap_leg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property provincia_legColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprovincia_leg
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property indirizzo_opeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnindirizzo_ope
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property localita_opeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlocalita_ope
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cap_opeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncap_ope
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property provincia_opeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnprovincia_ope
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property valore_IVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvalore_IVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property valore_ritenutaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvalore_ritenuta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property logo_grandeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlogo_grande
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property logo_piccoloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlogo_piccolo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property partita_IVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartita_IVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cciaaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncciaa
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property codicefiscaleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncodicefiscale
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property capitale_capColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncapitale_cap
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property data_attivitaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndata_attivita
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property NazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property autofatturazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnautofatturazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property idSDIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidSDI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DT_aziendaRow
            Get
                Return CType(Me.Rows(index),DT_aziendaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_aziendaRowChanging As DT_aziendaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_aziendaRowChanged As DT_aziendaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_aziendaRowDeleting As DT_aziendaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event DT_aziendaRowDeleted As DT_aziendaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AddDT_aziendaRow(ByVal row As DT_aziendaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AddDT_aziendaRow( _
                    ByVal ragione_sociale As String,  _
                    ByVal indirizzo_leg As String,  _
                    ByVal localita_leg As String,  _
                    ByVal cap_leg As String,  _
                    ByVal provincia_leg As String,  _
                    ByVal indirizzo_ope As String,  _
                    ByVal localita_ope As String,  _
                    ByVal cap_ope As String,  _
                    ByVal provincia_ope As String,  _
                    ByVal valore_IVA As Decimal,  _
                    ByVal valore_ritenuta As Decimal,  _
                    ByVal logo_grande() As Byte,  _
                    ByVal logo_piccolo() As Byte,  _
                    ByVal partita_IVA As String,  _
                    ByVal cciaa As String,  _
                    ByVal codicefiscale As String,  _
                    ByVal capitale_cap As Decimal,  _
                    ByVal data_attivita As Date,  _
                    ByVal Nazione As String,  _
                    ByVal autofatturazione As Short,  _
                    ByVal idSDI As String) As DT_aziendaRow
            Dim rowDT_aziendaRow As DT_aziendaRow = CType(Me.NewRow,DT_aziendaRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ragione_sociale, indirizzo_leg, localita_leg, cap_leg, provincia_leg, indirizzo_ope, localita_ope, cap_ope, provincia_ope, valore_IVA, valore_ritenuta, logo_grande, logo_piccolo, partita_IVA, cciaa, codicefiscale, capitale_cap, data_attivita, Nazione, autofatturazione, idSDI}
            rowDT_aziendaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDT_aziendaRow)
            Return rowDT_aziendaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DT_aziendaDataTable = CType(MyBase.Clone,DT_aziendaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DT_aziendaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnragione_sociale = MyBase.Columns("ragione_sociale")
            Me.columnindirizzo_leg = MyBase.Columns("indirizzo_leg")
            Me.columnlocalita_leg = MyBase.Columns("localita_leg")
            Me.columncap_leg = MyBase.Columns("cap_leg")
            Me.columnprovincia_leg = MyBase.Columns("provincia_leg")
            Me.columnindirizzo_ope = MyBase.Columns("indirizzo_ope")
            Me.columnlocalita_ope = MyBase.Columns("localita_ope")
            Me.columncap_ope = MyBase.Columns("cap_ope")
            Me.columnprovincia_ope = MyBase.Columns("provincia_ope")
            Me.columnvalore_IVA = MyBase.Columns("valore_IVA")
            Me.columnvalore_ritenuta = MyBase.Columns("valore_ritenuta")
            Me.columnlogo_grande = MyBase.Columns("logo_grande")
            Me.columnlogo_piccolo = MyBase.Columns("logo_piccolo")
            Me.columnpartita_IVA = MyBase.Columns("partita_IVA")
            Me.columncciaa = MyBase.Columns("cciaa")
            Me.columncodicefiscale = MyBase.Columns("codicefiscale")
            Me.columncapitale_cap = MyBase.Columns("capitale_cap")
            Me.columndata_attivita = MyBase.Columns("data_attivita")
            Me.columnNazione = MyBase.Columns("Nazione")
            Me.columnautofatturazione = MyBase.Columns("autofatturazione")
            Me.columnidSDI = MyBase.Columns("idSDI")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnragione_sociale = New Global.System.Data.DataColumn("ragione_sociale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnragione_sociale)
            Me.columnindirizzo_leg = New Global.System.Data.DataColumn("indirizzo_leg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnindirizzo_leg)
            Me.columnlocalita_leg = New Global.System.Data.DataColumn("localita_leg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlocalita_leg)
            Me.columncap_leg = New Global.System.Data.DataColumn("cap_leg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncap_leg)
            Me.columnprovincia_leg = New Global.System.Data.DataColumn("provincia_leg", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprovincia_leg)
            Me.columnindirizzo_ope = New Global.System.Data.DataColumn("indirizzo_ope", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnindirizzo_ope)
            Me.columnlocalita_ope = New Global.System.Data.DataColumn("localita_ope", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlocalita_ope)
            Me.columncap_ope = New Global.System.Data.DataColumn("cap_ope", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncap_ope)
            Me.columnprovincia_ope = New Global.System.Data.DataColumn("provincia_ope", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnprovincia_ope)
            Me.columnvalore_IVA = New Global.System.Data.DataColumn("valore_IVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvalore_IVA)
            Me.columnvalore_ritenuta = New Global.System.Data.DataColumn("valore_ritenuta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvalore_ritenuta)
            Me.columnlogo_grande = New Global.System.Data.DataColumn("logo_grande", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlogo_grande)
            Me.columnlogo_piccolo = New Global.System.Data.DataColumn("logo_piccolo", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlogo_piccolo)
            Me.columnpartita_IVA = New Global.System.Data.DataColumn("partita_IVA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartita_IVA)
            Me.columncciaa = New Global.System.Data.DataColumn("cciaa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncciaa)
            Me.columncodicefiscale = New Global.System.Data.DataColumn("codicefiscale", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncodicefiscale)
            Me.columncapitale_cap = New Global.System.Data.DataColumn("capitale_cap", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncapitale_cap)
            Me.columndata_attivita = New Global.System.Data.DataColumn("data_attivita", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndata_attivita)
            Me.columnNazione = New Global.System.Data.DataColumn("Nazione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNazione)
            Me.columnautofatturazione = New Global.System.Data.DataColumn("autofatturazione", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnautofatturazione)
            Me.columnidSDI = New Global.System.Data.DataColumn("idSDI", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidSDI)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, false))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.Unique = true
            Me.columnragione_sociale.MaxLength = 45
            Me.columnindirizzo_leg.MaxLength = 45
            Me.columnlocalita_leg.MaxLength = 45
            Me.columncap_leg.MaxLength = 5
            Me.columnprovincia_leg.MaxLength = 2
            Me.columnindirizzo_ope.MaxLength = 45
            Me.columnlocalita_ope.MaxLength = 45
            Me.columncap_ope.MaxLength = 5
            Me.columnprovincia_ope.MaxLength = 2
            Me.columnpartita_IVA.MaxLength = 13
            Me.columncciaa.MaxLength = 10
            Me.columncodicefiscale.MaxLength = 16
            Me.columnNazione.MaxLength = 45
            Me.columnidSDI.MaxLength = 7
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewDT_aziendaRow() As DT_aziendaRow
            Return CType(Me.NewRow,DT_aziendaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DT_aziendaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DT_aziendaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DT_aziendaRowChangedEvent) Is Nothing) Then
                RaiseEvent DT_aziendaRowChanged(Me, New DT_aziendaRowChangeEvent(CType(e.Row,DT_aziendaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DT_aziendaRowChangingEvent) Is Nothing) Then
                RaiseEvent DT_aziendaRowChanging(Me, New DT_aziendaRowChangeEvent(CType(e.Row,DT_aziendaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DT_aziendaRowDeletedEvent) Is Nothing) Then
                RaiseEvent DT_aziendaRowDeleted(Me, New DT_aziendaRowChangeEvent(CType(e.Row,DT_aziendaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DT_aziendaRowDeletingEvent) Is Nothing) Then
                RaiseEvent DT_aziendaRowDeleting(Me, New DT_aziendaRowChangeEvent(CType(e.Row,DT_aziendaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemoveDT_aziendaRow(ByVal row As DT_aziendaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_FE = New DS_FE()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DT_aziendaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtCodici_TDDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtCodici_TDRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnvalore As Global.System.Data.DataColumn
        
        Private columndescrizione As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtCodici_TD"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property valoreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnvalore
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property descrizioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndescrizione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtCodici_TDRow
            Get
                Return CType(Me.Rows(index),dtCodici_TDRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtCodici_TDRowChanging As dtCodici_TDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtCodici_TDRowChanged As dtCodici_TDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtCodici_TDRowDeleting As dtCodici_TDRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtCodici_TDRowDeleted As dtCodici_TDRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtCodici_TDRow(ByVal row As dtCodici_TDRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtCodici_TDRow(ByVal valore As String, ByVal descrizione As String) As dtCodici_TDRow
            Dim rowdtCodici_TDRow As dtCodici_TDRow = CType(Me.NewRow,dtCodici_TDRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, valore, descrizione}
            rowdtCodici_TDRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtCodici_TDRow)
            Return rowdtCodici_TDRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtCodici_TDDataTable = CType(MyBase.Clone,dtCodici_TDDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtCodici_TDDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnvalore = MyBase.Columns("valore")
            Me.columndescrizione = MyBase.Columns("descrizione")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnvalore = New Global.System.Data.DataColumn("valore", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnvalore)
            Me.columndescrizione = New Global.System.Data.DataColumn("descrizione", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndescrizione)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, false))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.Unique = true
            Me.columnvalore.AllowDBNull = false
            Me.columnvalore.MaxLength = 10
            Me.columndescrizione.MaxLength = 65535
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtCodici_TDRow() As dtCodici_TDRow
            Return CType(Me.NewRow,dtCodici_TDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtCodici_TDRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtCodici_TDRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtCodici_TDRowChangedEvent) Is Nothing) Then
                RaiseEvent dtCodici_TDRowChanged(Me, New dtCodici_TDRowChangeEvent(CType(e.Row,dtCodici_TDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtCodici_TDRowChangingEvent) Is Nothing) Then
                RaiseEvent dtCodici_TDRowChanging(Me, New dtCodici_TDRowChangeEvent(CType(e.Row,dtCodici_TDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtCodici_TDRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtCodici_TDRowDeleted(Me, New dtCodici_TDRowChangeEvent(CType(e.Row,dtCodici_TDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtCodici_TDRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtCodici_TDRowDeleting(Me, New dtCodici_TDRowChangeEvent(CType(e.Row,dtCodici_TDRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtCodici_TDRow(ByVal row As dtCodici_TDRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_FE = New DS_FE()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtCodici_TDDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtEsteriDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtEsteriRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnsocieta As Global.System.Data.DataColumn
        
        Private columnaddress As Global.System.Data.DataColumn
        
        Private columnpostalcode As Global.System.Data.DataColumn
        
        Private columncity As Global.System.Data.DataColumn
        
        Private columnregion As Global.System.Data.DataColumn
        
        Private columnstate As Global.System.Data.DataColumn
        
        Private columnemail_name As Global.System.Data.DataColumn
        
        Private columnpartitaiva As Global.System.Data.DataColumn
        
        Private columnpagamento As Global.System.Data.DataColumn
        
        Private columnbancaappog As Global.System.Data.DataColumn
        
        Private columnattivo As Global.System.Data.DataColumn
        
        Private columndata_creazione As Global.System.Data.DataColumn
        
        Private columnid_az As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtEsteri"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property societaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnsocieta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property addressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnaddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property postalcodeColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpostalcode
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cityColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncity
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property regionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnregion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property stateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnstate
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property email_nameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnemail_name
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property partitaivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpartitaiva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property pagamentoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnpagamento
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property bancaappogColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnbancaappog
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property attivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnattivo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property data_creazioneColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndata_creazione
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property id_azColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid_az
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtEsteriRow
            Get
                Return CType(Me.Rows(index),dtEsteriRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtEsteriRowChanging As dtEsteriRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtEsteriRowChanged As dtEsteriRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtEsteriRowDeleting As dtEsteriRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtEsteriRowDeleted As dtEsteriRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtEsteriRow(ByVal row As dtEsteriRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtEsteriRow(ByVal societa As String, ByVal address As String, ByVal postalcode As String, ByVal city As String, ByVal _region As String, ByVal state As String, ByVal email_name As String, ByVal partitaiva As String, ByVal pagamento As Integer, ByVal bancaappog As String, ByVal attivo As Integer, ByVal data_creazione As Date, ByVal id_az As Integer) As dtEsteriRow
            Dim rowdtEsteriRow As dtEsteriRow = CType(Me.NewRow,dtEsteriRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, societa, address, postalcode, city, _region, state, email_name, partitaiva, pagamento, bancaappog, attivo, data_creazione, id_az}
            rowdtEsteriRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtEsteriRow)
            Return rowdtEsteriRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtEsteriDataTable = CType(MyBase.Clone,dtEsteriDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtEsteriDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnsocieta = MyBase.Columns("societa")
            Me.columnaddress = MyBase.Columns("address")
            Me.columnpostalcode = MyBase.Columns("postalcode")
            Me.columncity = MyBase.Columns("city")
            Me.columnregion = MyBase.Columns("region")
            Me.columnstate = MyBase.Columns("state")
            Me.columnemail_name = MyBase.Columns("email_name")
            Me.columnpartitaiva = MyBase.Columns("partitaiva")
            Me.columnpagamento = MyBase.Columns("pagamento")
            Me.columnbancaappog = MyBase.Columns("bancaappog")
            Me.columnattivo = MyBase.Columns("attivo")
            Me.columndata_creazione = MyBase.Columns("data_creazione")
            Me.columnid_az = MyBase.Columns("id_az")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnsocieta = New Global.System.Data.DataColumn("societa", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnsocieta)
            Me.columnaddress = New Global.System.Data.DataColumn("address", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnaddress)
            Me.columnpostalcode = New Global.System.Data.DataColumn("postalcode", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpostalcode)
            Me.columncity = New Global.System.Data.DataColumn("city", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncity)
            Me.columnregion = New Global.System.Data.DataColumn("region", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            Me.columnregion.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "regionColumn")
            Me.columnregion.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnregion")
            Me.columnregion.ExtendedProperties.Add("Generator_UserColumnName", "region")
            MyBase.Columns.Add(Me.columnregion)
            Me.columnstate = New Global.System.Data.DataColumn("state", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnstate)
            Me.columnemail_name = New Global.System.Data.DataColumn("email_name", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnemail_name)
            Me.columnpartitaiva = New Global.System.Data.DataColumn("partitaiva", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpartitaiva)
            Me.columnpagamento = New Global.System.Data.DataColumn("pagamento", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnpagamento)
            Me.columnbancaappog = New Global.System.Data.DataColumn("bancaappog", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnbancaappog)
            Me.columnattivo = New Global.System.Data.DataColumn("attivo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnattivo)
            Me.columndata_creazione = New Global.System.Data.DataColumn("data_creazione", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndata_creazione)
            Me.columnid_az = New Global.System.Data.DataColumn("id_az", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid_az)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, false))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.Unique = true
            Me.columnsocieta.MaxLength = 75
            Me.columnaddress.MaxLength = 67
            Me.columnpostalcode.MaxLength = 7
            Me.columncity.MaxLength = 39
            Me.columnregion.MaxLength = 3
            Me.columnstate.MaxLength = 9
            Me.columnemail_name.MaxLength = 55
            Me.columnpartitaiva.MaxLength = 22
            Me.columnbancaappog.MaxLength = 103
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtEsteriRow() As dtEsteriRow
            Return CType(Me.NewRow,dtEsteriRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtEsteriRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtEsteriRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtEsteriRowChangedEvent) Is Nothing) Then
                RaiseEvent dtEsteriRowChanged(Me, New dtEsteriRowChangeEvent(CType(e.Row,dtEsteriRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtEsteriRowChangingEvent) Is Nothing) Then
                RaiseEvent dtEsteriRowChanging(Me, New dtEsteriRowChangeEvent(CType(e.Row,dtEsteriRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtEsteriRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtEsteriRowDeleted(Me, New dtEsteriRowChangeEvent(CType(e.Row,dtEsteriRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtEsteriRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtEsteriRowDeleting(Me, New dtEsteriRowChangeEvent(CType(e.Row,dtEsteriRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtEsteriRow(ByVal row As dtEsteriRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_FE = New DS_FE()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtEsteriDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtFatturaAutofatturaDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtFatturaAutofatturaRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnfat_num_da As Global.System.Data.DataColumn
        
        Private columnfat_cli_id As Global.System.Data.DataColumn
        
        Private columnfat_data As Global.System.Data.DataColumn
        
        Private columnfat_scad As Global.System.Data.DataColumn
        
        Private columnfat_paga As Global.System.Data.DataColumn
        
        Private columnfat_pa_dat As Global.System.Data.DataColumn
        
        Private columnfat_pa_des As Global.System.Data.DataColumn
        
        Private columnfat_cod_iva As Global.System.Data.DataColumn
        
        Private columnfat_cod_paga As Global.System.Data.DataColumn
        
        Private columnfat_nc As Global.System.Data.DataColumn
        
        Private columndatainvio As Global.System.Data.DataColumn
        
        Private columnnote As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtFatturaAutofattura"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_num_daColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_num_da
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_cli_idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_cli_id
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_dataColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_data
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_scadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_scad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_pagaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_paga
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_pa_datColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_pa_dat
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_pa_desColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_pa_des
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_cod_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_cod_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_cod_pagaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_cod_paga
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property fat_ncColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfat_nc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property datainvioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndatainvio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property noteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnnote
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtFatturaAutofatturaRow
            Get
                Return CType(Me.Rows(index),dtFatturaAutofatturaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtFatturaAutofatturaRowChanging As dtFatturaAutofatturaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtFatturaAutofatturaRowChanged As dtFatturaAutofatturaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtFatturaAutofatturaRowDeleting As dtFatturaAutofatturaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtFatturaAutofatturaRowDeleted As dtFatturaAutofatturaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtFatturaAutofatturaRow(ByVal row As dtFatturaAutofatturaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtFatturaAutofatturaRow(ByVal fat_num_da As String, ByVal parentDT_aziendaRowByDT_azienda_dtFatturaAutofattura As DT_aziendaRow, ByVal fat_data As Date, ByVal fat_scad As Date, ByVal fat_paga As Integer, ByVal fat_pa_dat As Date, ByVal fat_pa_des As String, ByVal fat_cod_iva As Integer, ByVal fat_cod_paga As Integer, ByVal fat_nc As Integer, ByVal datainvio As Date, ByVal note As String) As dtFatturaAutofatturaRow
            Dim rowdtFatturaAutofatturaRow As dtFatturaAutofatturaRow = CType(Me.NewRow,dtFatturaAutofatturaRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, fat_num_da, Nothing, fat_data, fat_scad, fat_paga, fat_pa_dat, fat_pa_des, fat_cod_iva, fat_cod_paga, fat_nc, datainvio, note}
            If (Not (parentDT_aziendaRowByDT_azienda_dtFatturaAutofattura) Is Nothing) Then
                columnValuesArray(2) = parentDT_aziendaRowByDT_azienda_dtFatturaAutofattura(0)
            End If
            rowdtFatturaAutofatturaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtFatturaAutofatturaRow)
            Return rowdtFatturaAutofatturaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtFatturaAutofatturaDataTable = CType(MyBase.Clone,dtFatturaAutofatturaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtFatturaAutofatturaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnfat_num_da = MyBase.Columns("fat_num_da")
            Me.columnfat_cli_id = MyBase.Columns("fat_cli_id")
            Me.columnfat_data = MyBase.Columns("fat_data")
            Me.columnfat_scad = MyBase.Columns("fat_scad")
            Me.columnfat_paga = MyBase.Columns("fat_paga")
            Me.columnfat_pa_dat = MyBase.Columns("fat_pa_dat")
            Me.columnfat_pa_des = MyBase.Columns("fat_pa_des")
            Me.columnfat_cod_iva = MyBase.Columns("fat_cod_iva")
            Me.columnfat_cod_paga = MyBase.Columns("fat_cod_paga")
            Me.columnfat_nc = MyBase.Columns("fat_nc")
            Me.columndatainvio = MyBase.Columns("datainvio")
            Me.columnnote = MyBase.Columns("note")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnfat_num_da = New Global.System.Data.DataColumn("fat_num_da", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_num_da)
            Me.columnfat_cli_id = New Global.System.Data.DataColumn("fat_cli_id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_cli_id)
            Me.columnfat_data = New Global.System.Data.DataColumn("fat_data", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_data)
            Me.columnfat_scad = New Global.System.Data.DataColumn("fat_scad", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_scad)
            Me.columnfat_paga = New Global.System.Data.DataColumn("fat_paga", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_paga)
            Me.columnfat_pa_dat = New Global.System.Data.DataColumn("fat_pa_dat", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_pa_dat)
            Me.columnfat_pa_des = New Global.System.Data.DataColumn("fat_pa_des", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_pa_des)
            Me.columnfat_cod_iva = New Global.System.Data.DataColumn("fat_cod_iva", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_cod_iva)
            Me.columnfat_cod_paga = New Global.System.Data.DataColumn("fat_cod_paga", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_cod_paga)
            Me.columnfat_nc = New Global.System.Data.DataColumn("fat_nc", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfat_nc)
            Me.columndatainvio = New Global.System.Data.DataColumn("datainvio", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndatainvio)
            Me.columnnote = New Global.System.Data.DataColumn("note", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnnote)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, false))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.Unique = true
            Me.columnfat_num_da.MaxLength = 65535
            Me.columnfat_pa_des.MaxLength = 65535
            Me.columnnote.MaxLength = 65535
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtFatturaAutofatturaRow() As dtFatturaAutofatturaRow
            Return CType(Me.NewRow,dtFatturaAutofatturaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtFatturaAutofatturaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtFatturaAutofatturaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtFatturaAutofatturaRowChangedEvent) Is Nothing) Then
                RaiseEvent dtFatturaAutofatturaRowChanged(Me, New dtFatturaAutofatturaRowChangeEvent(CType(e.Row,dtFatturaAutofatturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtFatturaAutofatturaRowChangingEvent) Is Nothing) Then
                RaiseEvent dtFatturaAutofatturaRowChanging(Me, New dtFatturaAutofatturaRowChangeEvent(CType(e.Row,dtFatturaAutofatturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtFatturaAutofatturaRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtFatturaAutofatturaRowDeleted(Me, New dtFatturaAutofatturaRowChangeEvent(CType(e.Row,dtFatturaAutofatturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtFatturaAutofatturaRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtFatturaAutofatturaRowDeleting(Me, New dtFatturaAutofatturaRowChangeEvent(CType(e.Row,dtFatturaAutofatturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtFatturaAutofatturaRow(ByVal row As dtFatturaAutofatturaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_FE = New DS_FE()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtFatturaAutofatturaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class dtFatturaRigheAutofatturaDataTable
        Inherits Global.System.Data.TypedTableBase(Of dtFatturaRigheAutofatturaRow)
        
        Private columnid As Global.System.Data.DataColumn
        
        Private columnordine As Global.System.Data.DataColumn
        
        Private columncfa_fa_num As Global.System.Data.DataColumn
        
        Private columncfa_des As Global.System.Data.DataColumn
        
        Private columncfa_quanti As Global.System.Data.DataColumn
        
        Private columncfa_prezzo As Global.System.Data.DataColumn
        
        Private columncfa_sconto As Global.System.Data.DataColumn
        
        Private columncfa_iva As Global.System.Data.DataColumn
        
        Private columncfa_iddest As Global.System.Data.DataColumn
        
        Private columncfa_idcli As Global.System.Data.DataColumn
        
        Private columncfa_pulofor As Global.System.Data.DataColumn
        
        Private columncfa_dataunica As Global.System.Data.DataColumn
        
        Private columncfa_rc As Global.System.Data.DataColumn
        
        Private columncfa_tipo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "dtFatturaRigheAutofattura"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property idColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnid
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property ordineColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnordine
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_fa_numColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_fa_num
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_desColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_des
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_quantiColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_quanti
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_prezzoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_prezzo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_scontoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_sconto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_ivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_iva
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_iddestColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_iddest
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_idcliColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_idcli
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_puloforColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_pulofor
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_dataunicaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_dataunica
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_rcColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_rc
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property cfa_tipoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columncfa_tipo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As dtFatturaRigheAutofatturaRow
            Get
                Return CType(Me.Rows(index),dtFatturaRigheAutofatturaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtFatturaRigheAutofatturaRowChanging As dtFatturaRigheAutofatturaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtFatturaRigheAutofatturaRowChanged As dtFatturaRigheAutofatturaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtFatturaRigheAutofatturaRowDeleting As dtFatturaRigheAutofatturaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Event dtFatturaRigheAutofatturaRowDeleted As dtFatturaRigheAutofatturaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Sub AdddtFatturaRigheAutofatturaRow(ByVal row As dtFatturaRigheAutofatturaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overloads Function AdddtFatturaRigheAutofatturaRow(ByVal ordine As Integer, ByVal parentdtFatturaAutofatturaRowBydtFatturaAutofattura_dtFatturaRigheAutofattura As dtFatturaAutofatturaRow, ByVal cfa_des As String, ByVal cfa_quanti As Double, ByVal cfa_prezzo As Double, ByVal cfa_sconto As Double, ByVal cfa_iva As Double, ByVal cfa_iddest As Integer, ByVal cfa_idcli As Integer, ByVal cfa_pulofor As Integer, ByVal cfa_dataunica As String, ByVal cfa_rc As Integer, ByVal cfa_tipo As Integer) As dtFatturaRigheAutofatturaRow
            Dim rowdtFatturaRigheAutofatturaRow As dtFatturaRigheAutofatturaRow = CType(Me.NewRow,dtFatturaRigheAutofatturaRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, ordine, Nothing, cfa_des, cfa_quanti, cfa_prezzo, cfa_sconto, cfa_iva, cfa_iddest, cfa_idcli, cfa_pulofor, cfa_dataunica, cfa_rc, cfa_tipo}
            If (Not (parentdtFatturaAutofatturaRowBydtFatturaAutofattura_dtFatturaRigheAutofattura) Is Nothing) Then
                columnValuesArray(2) = parentdtFatturaAutofatturaRowBydtFatturaAutofattura_dtFatturaRigheAutofattura(1)
            End If
            rowdtFatturaRigheAutofatturaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowdtFatturaRigheAutofatturaRow)
            Return rowdtFatturaRigheAutofatturaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As dtFatturaRigheAutofatturaDataTable = CType(MyBase.Clone,dtFatturaRigheAutofatturaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New dtFatturaRigheAutofatturaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnid = MyBase.Columns("id")
            Me.columnordine = MyBase.Columns("ordine")
            Me.columncfa_fa_num = MyBase.Columns("cfa_fa_num")
            Me.columncfa_des = MyBase.Columns("cfa_des")
            Me.columncfa_quanti = MyBase.Columns("cfa_quanti")
            Me.columncfa_prezzo = MyBase.Columns("cfa_prezzo")
            Me.columncfa_sconto = MyBase.Columns("cfa_sconto")
            Me.columncfa_iva = MyBase.Columns("cfa_iva")
            Me.columncfa_iddest = MyBase.Columns("cfa_iddest")
            Me.columncfa_idcli = MyBase.Columns("cfa_idcli")
            Me.columncfa_pulofor = MyBase.Columns("cfa_pulofor")
            Me.columncfa_dataunica = MyBase.Columns("cfa_dataunica")
            Me.columncfa_rc = MyBase.Columns("cfa_rc")
            Me.columncfa_tipo = MyBase.Columns("cfa_tipo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitClass()
            Me.columnid = New Global.System.Data.DataColumn("id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnid)
            Me.columnordine = New Global.System.Data.DataColumn("ordine", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnordine)
            Me.columncfa_fa_num = New Global.System.Data.DataColumn("cfa_fa_num", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_fa_num)
            Me.columncfa_des = New Global.System.Data.DataColumn("cfa_des", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_des)
            Me.columncfa_quanti = New Global.System.Data.DataColumn("cfa_quanti", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_quanti)
            Me.columncfa_prezzo = New Global.System.Data.DataColumn("cfa_prezzo", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_prezzo)
            Me.columncfa_sconto = New Global.System.Data.DataColumn("cfa_sconto", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_sconto)
            Me.columncfa_iva = New Global.System.Data.DataColumn("cfa_iva", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_iva)
            Me.columncfa_iddest = New Global.System.Data.DataColumn("cfa_iddest", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_iddest)
            Me.columncfa_idcli = New Global.System.Data.DataColumn("cfa_idcli", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_idcli)
            Me.columncfa_pulofor = New Global.System.Data.DataColumn("cfa_pulofor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_pulofor)
            Me.columncfa_dataunica = New Global.System.Data.DataColumn("cfa_dataunica", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_dataunica)
            Me.columncfa_rc = New Global.System.Data.DataColumn("cfa_rc", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_rc)
            Me.columncfa_tipo = New Global.System.Data.DataColumn("cfa_tipo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columncfa_tipo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnid}, false))
            Me.columnid.AutoIncrement = true
            Me.columnid.AutoIncrementSeed = -1
            Me.columnid.AutoIncrementStep = -1
            Me.columnid.Unique = true
            Me.columncfa_fa_num.MaxLength = 15
            Me.columncfa_des.MaxLength = 65535
            Me.columncfa_dataunica.MaxLength = 65535
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function NewdtFatturaRigheAutofatturaRow() As dtFatturaRigheAutofatturaRow
            Return CType(Me.NewRow,dtFatturaRigheAutofatturaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New dtFatturaRigheAutofatturaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(dtFatturaRigheAutofatturaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.dtFatturaRigheAutofatturaRowChangedEvent) Is Nothing) Then
                RaiseEvent dtFatturaRigheAutofatturaRowChanged(Me, New dtFatturaRigheAutofatturaRowChangeEvent(CType(e.Row,dtFatturaRigheAutofatturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.dtFatturaRigheAutofatturaRowChangingEvent) Is Nothing) Then
                RaiseEvent dtFatturaRigheAutofatturaRowChanging(Me, New dtFatturaRigheAutofatturaRowChangeEvent(CType(e.Row,dtFatturaRigheAutofatturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.dtFatturaRigheAutofatturaRowDeletedEvent) Is Nothing) Then
                RaiseEvent dtFatturaRigheAutofatturaRowDeleted(Me, New dtFatturaRigheAutofatturaRowChangeEvent(CType(e.Row,dtFatturaRigheAutofatturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.dtFatturaRigheAutofatturaRowDeletingEvent) Is Nothing) Then
                RaiseEvent dtFatturaRigheAutofatturaRowDeleting(Me, New dtFatturaRigheAutofatturaRowChangeEvent(CType(e.Row,dtFatturaRigheAutofatturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub RemovedtFatturaRigheAutofatturaRow(ByVal row As dtFatturaRigheAutofatturaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DS_FE = New DS_FE()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "dtFatturaRigheAutofatturaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DT_fatturaFERow
        Inherits Global.System.Data.DataRow
        
        Private tableDT_fatturaFE As DT_fatturaFEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDT_fatturaFE = CType(Me.Table,DT_fatturaFEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_num_da() As String
            Get
                Return CType(Me(Me.tableDT_fatturaFE.fat_num_daColumn),String)
            End Get
            Set
                Me(Me.tableDT_fatturaFE.fat_num_daColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_cli_id() As Integer
            Get
                Return CType(Me(Me.tableDT_fatturaFE.fat_cli_idColumn),Integer)
            End Get
            Set
                Me(Me.tableDT_fatturaFE.fat_cli_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_data() As Date
            Get
                Return CType(Me(Me.tableDT_fatturaFE.fat_dataColumn),Date)
            End Get
            Set
                Me(Me.tableDT_fatturaFE.fat_dataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_scad() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.fat_scadColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'fat_scad' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.fat_scadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_cod_iva() As Decimal
            Get
                Return CType(Me(Me.tableDT_fatturaFE.fat_cod_ivaColumn),Decimal)
            End Get
            Set
                Me(Me.tableDT_fatturaFE.fat_cod_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property societa() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.societaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'societa' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.societaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property address() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'address' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property postalcode() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.postalcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'postalcode' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.postalcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property city() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'city' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property _region() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.regionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'region' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.regionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property state() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.stateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'state' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property email_name() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.email_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'email_name' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.email_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property partitaiva() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.partitaivaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'partitaiva' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.partitaivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property condomino() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.condominoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'condomino' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.condominoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property _114_codicedestinatario() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE._114_codicedestinatarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna '114_codicedestinatario' nella tabella 'DT_fatturaFE' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE._114_codicedestinatarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property _116_pecdestinatario() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE._116_pecdestinatarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna '116_pecdestinatario' nella tabella 'DT_fatturaFE' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE._116_pecdestinatarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cf() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.cfColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cf' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.cfColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property des() As String
            Get
                Return CType(Me(Me.tableDT_fatturaFE.desColumn),String)
            End Get
            Set
                Me(Me.tableDT_fatturaFE.desColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property bancaappog() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.bancaappogColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'bancaappog' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.bancaappogColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property modalitaFE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.modalitaFEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'modalitaFE' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.modalitaFEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ricerca() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.ricercaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ricerca' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.ricercaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_nc() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.fat_ncColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'fat_nc' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.fat_ncColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property pa() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.paColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'pa' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.paColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property l_mobile() As Integer
            Get
                Return CType(Me(Me.tableDT_fatturaFE.l_mobileColumn),Integer)
            End Get
            Set
                Me(Me.tableDT_fatturaFE.l_mobileColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property idfatturaunq() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDT_fatturaFE.idfatturaunqColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'idfatturaunq' nella tabella 'DT_fatturaFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_fatturaFE.idfatturaunqColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfat_scadNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.fat_scadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfat_scadNull()
            Me(Me.tableDT_fatturaFE.fat_scadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IssocietaNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.societaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetsocietaNull()
            Me(Me.tableDT_fatturaFE.societaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsaddressNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetaddressNull()
            Me(Me.tableDT_fatturaFE.addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IspostalcodeNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.postalcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetpostalcodeNull()
            Me(Me.tableDT_fatturaFE.postalcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscityNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcityNull()
            Me(Me.tableDT_fatturaFE.cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Is_regionNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.regionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Set_regionNull()
            Me(Me.tableDT_fatturaFE.regionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsstateNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.stateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetstateNull()
            Me(Me.tableDT_fatturaFE.stateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isemail_nameNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.email_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setemail_nameNull()
            Me(Me.tableDT_fatturaFE.email_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IspartitaivaNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.partitaivaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetpartitaivaNull()
            Me(Me.tableDT_fatturaFE.partitaivaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscondominoNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.condominoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcondominoNull()
            Me(Me.tableDT_fatturaFE.condominoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Is_114_codicedestinatarioNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE._114_codicedestinatarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Set_114_codicedestinatarioNull()
            Me(Me.tableDT_fatturaFE._114_codicedestinatarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Is_116_pecdestinatarioNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE._116_pecdestinatarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Set_116_pecdestinatarioNull()
            Me(Me.tableDT_fatturaFE._116_pecdestinatarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscfNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.cfColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcfNull()
            Me(Me.tableDT_fatturaFE.cfColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsbancaappogNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.bancaappogColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetbancaappogNull()
            Me(Me.tableDT_fatturaFE.bancaappogColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsmodalitaFENull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.modalitaFEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetmodalitaFENull()
            Me(Me.tableDT_fatturaFE.modalitaFEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsricercaNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.ricercaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetricercaNull()
            Me(Me.tableDT_fatturaFE.ricercaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfat_ncNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.fat_ncColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfat_ncNull()
            Me(Me.tableDT_fatturaFE.fat_ncColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IspaNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.paColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetpaNull()
            Me(Me.tableDT_fatturaFE.paColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsidfatturaunqNull() As Boolean
            Return Me.IsNull(Me.tableDT_fatturaFE.idfatturaunqColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetidfatturaunqNull()
            Me(Me.tableDT_fatturaFE.idfatturaunqColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function GetDT_righeFERows() As DT_righeFERow()
            If (Me.Table.ChildRelations("REL_fat_rig") Is Nothing) Then
                Return New DT_righeFERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("REL_fat_rig")),DT_righeFERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function GetDT_sommeFERows() As DT_sommeFERow()
            If (Me.Table.ChildRelations("REL_somme") Is Nothing) Then
                Return New DT_sommeFERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("REL_somme")),DT_sommeFERow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DT_righeFERow
        Inherits Global.System.Data.DataRow
        
        Private tableDT_righeFE As DT_righeFEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDT_righeFE = CType(Me.Table,DT_righeFEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ordine() As Integer
            Get
                Return CType(Me(Me.tableDT_righeFE.ordineColumn),Integer)
            End Get
            Set
                Me(Me.tableDT_righeFE.ordineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_des() As String
            Get
                Return CType(Me(Me.tableDT_righeFE.cfa_desColumn),String)
            End Get
            Set
                Me(Me.tableDT_righeFE.cfa_desColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_quanti() As Decimal
            Get
                Return CType(Me(Me.tableDT_righeFE.cfa_quantiColumn),Decimal)
            End Get
            Set
                Me(Me.tableDT_righeFE.cfa_quantiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_prezzo() As Decimal
            Get
                Return CType(Me(Me.tableDT_righeFE.cfa_prezzoColumn),Decimal)
            End Get
            Set
                Me(Me.tableDT_righeFE.cfa_prezzoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_sconto() As Decimal
            Get
                Return CType(Me(Me.tableDT_righeFE.cfa_scontoColumn),Decimal)
            End Get
            Set
                Me(Me.tableDT_righeFE.cfa_scontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_pulofor() As Integer
            Get
                Return CType(Me(Me.tableDT_righeFE.cfa_puloforColumn),Integer)
            End Get
            Set
                Me(Me.tableDT_righeFE.cfa_puloforColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_fa_num() As String
            Get
                Return CType(Me(Me.tableDT_righeFE.cfa_fa_numColumn),String)
            End Get
            Set
                Me(Me.tableDT_righeFE.cfa_fa_numColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nome() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_righeFE.nomeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'nome' nella tabella 'DT_righeFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_righeFE.nomeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property nomebreve() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_righeFE.nomebreveColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'nomebreve' nella tabella 'DT_righeFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_righeFE.nomebreveColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_righeFE.descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'descrizione' nella tabella 'DT_righeFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_righeFE.descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property valoreiva() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDT_righeFE.valoreivaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'valoreiva' nella tabella 'DT_righeFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_righeFE.valoreivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property pagata() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDT_righeFE.pagataColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'pagata' nella tabella 'DT_righeFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_righeFE.pagataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cod_FE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_righeFE.cod_FEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cod_FE' nella tabella 'DT_righeFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_righeFE.cod_FEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property iva() As Decimal
            Get
                Return CType(Me(Me.tableDT_righeFE.ivaColumn),Decimal)
            End Get
            Set
                Me(Me.tableDT_righeFE.ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cod_iva() As Integer
            Get
                Return CType(Me(Me.tableDT_righeFE.cod_ivaColumn),Integer)
            End Get
            Set
                Me(Me.tableDT_righeFE.cod_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_data() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDT_righeFE.fat_dataColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'fat_data' nella tabella 'DT_righeFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_righeFE.fat_dataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DT_fatturaFERow() As DT_fatturaFERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("REL_fat_rig")),DT_fatturaFERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("REL_fat_rig"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnomeNull() As Boolean
            Return Me.IsNull(Me.tableDT_righeFE.nomeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnomeNull()
            Me(Me.tableDT_righeFE.nomeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnomebreveNull() As Boolean
            Return Me.IsNull(Me.tableDT_righeFE.nomebreveColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnomebreveNull()
            Me(Me.tableDT_righeFE.nomebreveColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdescrizioneNull() As Boolean
            Return Me.IsNull(Me.tableDT_righeFE.descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdescrizioneNull()
            Me(Me.tableDT_righeFE.descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsvaloreivaNull() As Boolean
            Return Me.IsNull(Me.tableDT_righeFE.valoreivaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetvaloreivaNull()
            Me(Me.tableDT_righeFE.valoreivaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IspagataNull() As Boolean
            Return Me.IsNull(Me.tableDT_righeFE.pagataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetpagataNull()
            Me(Me.tableDT_righeFE.pagataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscod_FENull() As Boolean
            Return Me.IsNull(Me.tableDT_righeFE.cod_FEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcod_FENull()
            Me(Me.tableDT_righeFE.cod_FEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfat_dataNull() As Boolean
            Return Me.IsNull(Me.tableDT_righeFE.fat_dataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfat_dataNull()
            Me(Me.tableDT_righeFE.fat_dataColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DT_sommeFERow
        Inherits Global.System.Data.DataRow
        
        Private tableDT_sommeFE As DT_sommeFEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDT_sommeFE = CType(Me.Table,DT_sommeFEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property totale() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDT_sommeFE.totaleColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'totale' nella tabella 'DT_sommeFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_sommeFE.totaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property scontato() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDT_sommeFE.scontatoColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'scontato' nella tabella 'DT_sommeFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_sommeFE.scontatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property imposta() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDT_sommeFE.impostaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'imposta' nella tabella 'DT_sommeFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_sommeFE.impostaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_fa_num() As String
            Get
                Return CType(Me(Me.tableDT_sommeFE.cfa_fa_numColumn),String)
            End Get
            Set
                Me(Me.tableDT_sommeFE.cfa_fa_numColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_rc() As Integer
            Get
                Return CType(Me(Me.tableDT_sommeFE.cfa_rcColumn),Integer)
            End Get
            Set
                Me(Me.tableDT_sommeFE.cfa_rcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property descrizione() As String
            Get
                Return CType(Me(Me.tableDT_sommeFE.descrizioneColumn),String)
            End Get
            Set
                Me(Me.tableDT_sommeFE.descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property valoreiva() As Decimal
            Get
                Return CType(Me(Me.tableDT_sommeFE.valoreivaColumn),Decimal)
            End Get
            Set
                Me(Me.tableDT_sommeFE.valoreivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cod_FE() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_sommeFE.cod_FEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cod_FE' nella tabella 'DT_sommeFE' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_sommeFE.cod_FEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DT_fatturaFERow() As DT_fatturaFERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("REL_somme")),DT_fatturaFERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("REL_somme"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IstotaleNull() As Boolean
            Return Me.IsNull(Me.tableDT_sommeFE.totaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SettotaleNull()
            Me(Me.tableDT_sommeFE.totaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsscontatoNull() As Boolean
            Return Me.IsNull(Me.tableDT_sommeFE.scontatoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetscontatoNull()
            Me(Me.tableDT_sommeFE.scontatoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsimpostaNull() As Boolean
            Return Me.IsNull(Me.tableDT_sommeFE.impostaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetimpostaNull()
            Me(Me.tableDT_sommeFE.impostaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscod_FENull() As Boolean
            Return Me.IsNull(Me.tableDT_sommeFE.cod_FEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcod_FENull()
            Me(Me.tableDT_sommeFE.cod_FEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DT_trasmittenteRow
        Inherits Global.System.Data.DataRow
        
        Private tableDT_trasmittente As DT_trasmittenteDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDT_trasmittente = CType(Me.Table,DT_trasmittenteDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDT_trasmittente.idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'id' nella tabella 'DT_trasmittente' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_trasmittente.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property idPaese() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_trasmittente.idPaeseColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'idPaese' nella tabella 'DT_trasmittente' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_trasmittente.idPaeseColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property idCodice() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_trasmittente.idCodiceColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'idCodice' nella tabella 'DT_trasmittente' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_trasmittente.idCodiceColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Telefono() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_trasmittente.TelefonoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Telefono' nella tabella 'DT_trasmittente' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_trasmittente.TelefonoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Email() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_trasmittente.EmailColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Email' nella tabella 'DT_trasmittente' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_trasmittente.EmailColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Nominativo() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_trasmittente.NominativoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Nominativo' nella tabella 'DT_trasmittente' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_trasmittente.NominativoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tableDT_trasmittente.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetidNull()
            Me(Me.tableDT_trasmittente.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsidPaeseNull() As Boolean
            Return Me.IsNull(Me.tableDT_trasmittente.idPaeseColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetidPaeseNull()
            Me(Me.tableDT_trasmittente.idPaeseColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsidCodiceNull() As Boolean
            Return Me.IsNull(Me.tableDT_trasmittente.idCodiceColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetidCodiceNull()
            Me(Me.tableDT_trasmittente.idCodiceColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsTelefonoNull() As Boolean
            Return Me.IsNull(Me.tableDT_trasmittente.TelefonoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetTelefonoNull()
            Me(Me.tableDT_trasmittente.TelefonoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsEmailNull() As Boolean
            Return Me.IsNull(Me.tableDT_trasmittente.EmailColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetEmailNull()
            Me(Me.tableDT_trasmittente.EmailColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNominativoNull() As Boolean
            Return Me.IsNull(Me.tableDT_trasmittente.NominativoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNominativoNull()
            Me(Me.tableDT_trasmittente.NominativoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DT_aziendaRow
        Inherits Global.System.Data.DataRow
        
        Private tableDT_azienda As DT_aziendaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDT_azienda = CType(Me.Table,DT_aziendaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'id' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ragione_sociale() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.ragione_socialeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ragione_sociale' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.ragione_socialeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property indirizzo_leg() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.indirizzo_legColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'indirizzo_leg' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.indirizzo_legColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property localita_leg() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.localita_legColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'localita_leg' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.localita_legColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cap_leg() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.cap_legColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cap_leg' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.cap_legColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property provincia_leg() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.provincia_legColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'provincia_leg' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.provincia_legColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property indirizzo_ope() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.indirizzo_opeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'indirizzo_ope' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.indirizzo_opeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property localita_ope() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.localita_opeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'localita_ope' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.localita_opeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cap_ope() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.cap_opeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cap_ope' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.cap_opeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property provincia_ope() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.provincia_opeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'provincia_ope' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.provincia_opeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property valore_IVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.valore_IVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'valore_IVA' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.valore_IVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property valore_ritenuta() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.valore_ritenutaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'valore_ritenuta' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.valore_ritenutaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property logo_grande() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.logo_grandeColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'logo_grande' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.logo_grandeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property logo_piccolo() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.logo_piccoloColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'logo_piccolo' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.logo_piccoloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property partita_IVA() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.partita_IVAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'partita_IVA' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.partita_IVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cciaa() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.cciaaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cciaa' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.cciaaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property codicefiscale() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.codicefiscaleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'codicefiscale' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.codicefiscaleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property capitale_cap() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.capitale_capColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'capitale_cap' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.capitale_capColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property data_attivita() As Date
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.data_attivitaColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'data_attivita' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.data_attivitaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property Nazione() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.NazioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'Nazione' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.NazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property autofatturazione() As Short
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.autofatturazioneColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'autofatturazione' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.autofatturazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property idSDI() As String
            Get
                Try 
                    Return CType(Me(Me.tableDT_azienda.idSDIColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'idSDI' nella tabella 'DT_azienda' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDT_azienda.idSDIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetidNull()
            Me(Me.tableDT_azienda.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isragione_socialeNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.ragione_socialeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setragione_socialeNull()
            Me(Me.tableDT_azienda.ragione_socialeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isindirizzo_legNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.indirizzo_legColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setindirizzo_legNull()
            Me(Me.tableDT_azienda.indirizzo_legColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Islocalita_legNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.localita_legColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setlocalita_legNull()
            Me(Me.tableDT_azienda.localita_legColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscap_legNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.cap_legColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcap_legNull()
            Me(Me.tableDT_azienda.cap_legColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isprovincia_legNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.provincia_legColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setprovincia_legNull()
            Me(Me.tableDT_azienda.provincia_legColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isindirizzo_opeNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.indirizzo_opeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setindirizzo_opeNull()
            Me(Me.tableDT_azienda.indirizzo_opeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Islocalita_opeNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.localita_opeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setlocalita_opeNull()
            Me(Me.tableDT_azienda.localita_opeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscap_opeNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.cap_opeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcap_opeNull()
            Me(Me.tableDT_azienda.cap_opeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isprovincia_opeNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.provincia_opeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setprovincia_opeNull()
            Me(Me.tableDT_azienda.provincia_opeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isvalore_IVANull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.valore_IVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setvalore_IVANull()
            Me(Me.tableDT_azienda.valore_IVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isvalore_ritenutaNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.valore_ritenutaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setvalore_ritenutaNull()
            Me(Me.tableDT_azienda.valore_ritenutaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Islogo_grandeNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.logo_grandeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setlogo_grandeNull()
            Me(Me.tableDT_azienda.logo_grandeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Islogo_piccoloNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.logo_piccoloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setlogo_piccoloNull()
            Me(Me.tableDT_azienda.logo_piccoloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Ispartita_IVANull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.partita_IVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setpartita_IVANull()
            Me(Me.tableDT_azienda.partita_IVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscciaaNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.cciaaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcciaaNull()
            Me(Me.tableDT_azienda.cciaaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscodicefiscaleNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.codicefiscaleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcodicefiscaleNull()
            Me(Me.tableDT_azienda.codicefiscaleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscapitale_capNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.capitale_capColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcapitale_capNull()
            Me(Me.tableDT_azienda.capitale_capColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isdata_attivitaNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.data_attivitaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setdata_attivitaNull()
            Me(Me.tableDT_azienda.data_attivitaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsNazioneNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.NazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetNazioneNull()
            Me(Me.tableDT_azienda.NazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsautofatturazioneNull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.autofatturazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetautofatturazioneNull()
            Me(Me.tableDT_azienda.autofatturazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsidSDINull() As Boolean
            Return Me.IsNull(Me.tableDT_azienda.idSDIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetidSDINull()
            Me(Me.tableDT_azienda.idSDIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function GetdtFatturaAutofatturaRows() As dtFatturaAutofatturaRow()
            If (Me.Table.ChildRelations("DT_azienda_dtFatturaAutofattura") Is Nothing) Then
                Return New dtFatturaAutofatturaRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("DT_azienda_dtFatturaAutofattura")),dtFatturaAutofatturaRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtCodici_TDRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtCodici_TD As dtCodici_TDDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtCodici_TD = CType(Me.Table,dtCodici_TDDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtCodici_TD.idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'id' nella tabella 'dtCodici_TD' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtCodici_TD.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property valore() As String
            Get
                Return CType(Me(Me.tabledtCodici_TD.valoreColumn),String)
            End Get
            Set
                Me(Me.tabledtCodici_TD.valoreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property descrizione() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtCodici_TD.descrizioneColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'descrizione' nella tabella 'dtCodici_TD' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtCodici_TD.descrizioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tabledtCodici_TD.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetidNull()
            Me(Me.tabledtCodici_TD.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdescrizioneNull() As Boolean
            Return Me.IsNull(Me.tabledtCodici_TD.descrizioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdescrizioneNull()
            Me(Me.tabledtCodici_TD.descrizioneColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtEsteriRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtEsteri As dtEsteriDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtEsteri = CType(Me.Table,dtEsteriDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtEsteri.idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'id' nella tabella 'dtEsteri' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtEsteri.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property societa() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtEsteri.societaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'societa' nella tabella 'dtEsteri' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtEsteri.societaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property address() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtEsteri.addressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'address' nella tabella 'dtEsteri' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtEsteri.addressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property postalcode() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtEsteri.postalcodeColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'postalcode' nella tabella 'dtEsteri' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtEsteri.postalcodeColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property city() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtEsteri.cityColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'city' nella tabella 'dtEsteri' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtEsteri.cityColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property _region() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtEsteri.regionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'region' nella tabella 'dtEsteri' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtEsteri.regionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property state() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtEsteri.stateColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'state' nella tabella 'dtEsteri' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtEsteri.stateColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property email_name() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtEsteri.email_nameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'email_name' nella tabella 'dtEsteri' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtEsteri.email_nameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property partitaiva() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtEsteri.partitaivaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'partitaiva' nella tabella 'dtEsteri' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtEsteri.partitaivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property pagamento() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtEsteri.pagamentoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'pagamento' nella tabella 'dtEsteri' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtEsteri.pagamentoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property bancaappog() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtEsteri.bancaappogColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'bancaappog' nella tabella 'dtEsteri' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtEsteri.bancaappogColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property attivo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtEsteri.attivoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'attivo' nella tabella 'dtEsteri' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtEsteri.attivoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property data_creazione() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtEsteri.data_creazioneColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'data_creazione' nella tabella 'dtEsteri' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtEsteri.data_creazioneColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id_az() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtEsteri.id_azColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'id_az' nella tabella 'dtEsteri' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtEsteri.id_azColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tabledtEsteri.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetidNull()
            Me(Me.tabledtEsteri.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IssocietaNull() As Boolean
            Return Me.IsNull(Me.tabledtEsteri.societaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetsocietaNull()
            Me(Me.tabledtEsteri.societaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsaddressNull() As Boolean
            Return Me.IsNull(Me.tabledtEsteri.addressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetaddressNull()
            Me(Me.tabledtEsteri.addressColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IspostalcodeNull() As Boolean
            Return Me.IsNull(Me.tabledtEsteri.postalcodeColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetpostalcodeNull()
            Me(Me.tabledtEsteri.postalcodeColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IscityNull() As Boolean
            Return Me.IsNull(Me.tabledtEsteri.cityColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetcityNull()
            Me(Me.tabledtEsteri.cityColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Is_regionNull() As Boolean
            Return Me.IsNull(Me.tabledtEsteri.regionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Set_regionNull()
            Me(Me.tabledtEsteri.regionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsstateNull() As Boolean
            Return Me.IsNull(Me.tabledtEsteri.stateColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetstateNull()
            Me(Me.tabledtEsteri.stateColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isemail_nameNull() As Boolean
            Return Me.IsNull(Me.tabledtEsteri.email_nameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setemail_nameNull()
            Me(Me.tabledtEsteri.email_nameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IspartitaivaNull() As Boolean
            Return Me.IsNull(Me.tabledtEsteri.partitaivaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetpartitaivaNull()
            Me(Me.tabledtEsteri.partitaivaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IspagamentoNull() As Boolean
            Return Me.IsNull(Me.tabledtEsteri.pagamentoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetpagamentoNull()
            Me(Me.tabledtEsteri.pagamentoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsbancaappogNull() As Boolean
            Return Me.IsNull(Me.tabledtEsteri.bancaappogColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetbancaappogNull()
            Me(Me.tabledtEsteri.bancaappogColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsattivoNull() As Boolean
            Return Me.IsNull(Me.tabledtEsteri.attivoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetattivoNull()
            Me(Me.tabledtEsteri.attivoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isdata_creazioneNull() As Boolean
            Return Me.IsNull(Me.tabledtEsteri.data_creazioneColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setdata_creazioneNull()
            Me(Me.tabledtEsteri.data_creazioneColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isid_azNull() As Boolean
            Return Me.IsNull(Me.tabledtEsteri.id_azColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setid_azNull()
            Me(Me.tabledtEsteri.id_azColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtFatturaAutofatturaRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtFatturaAutofattura As dtFatturaAutofatturaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtFatturaAutofattura = CType(Me.Table,dtFatturaAutofatturaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaAutofattura.idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'id' nella tabella 'dtFatturaAutofattura' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaAutofattura.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_num_da() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaAutofattura.fat_num_daColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'fat_num_da' nella tabella 'dtFatturaAutofattura' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaAutofattura.fat_num_daColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_cli_id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaAutofattura.fat_cli_idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'fat_cli_id' nella tabella 'dtFatturaAutofattura' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaAutofattura.fat_cli_idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_data() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaAutofattura.fat_dataColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'fat_data' nella tabella 'dtFatturaAutofattura' è DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaAutofattura.fat_dataColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_scad() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaAutofattura.fat_scadColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'fat_scad' nella tabella 'dtFatturaAutofattura' è DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaAutofattura.fat_scadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_paga() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaAutofattura.fat_pagaColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'fat_paga' nella tabella 'dtFatturaAutofattura' è DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaAutofattura.fat_pagaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_pa_dat() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaAutofattura.fat_pa_datColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'fat_pa_dat' nella tabella 'dtFatturaAutofattura' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaAutofattura.fat_pa_datColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_pa_des() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaAutofattura.fat_pa_desColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'fat_pa_des' nella tabella 'dtFatturaAutofattura' è DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaAutofattura.fat_pa_desColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_cod_iva() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaAutofattura.fat_cod_ivaColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'fat_cod_iva' nella tabella 'dtFatturaAutofattura' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaAutofattura.fat_cod_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_cod_paga() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaAutofattura.fat_cod_pagaColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'fat_cod_paga' nella tabella 'dtFatturaAutofattura' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaAutofattura.fat_cod_pagaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property fat_nc() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaAutofattura.fat_ncColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'fat_nc' nella tabella 'dtFatturaAutofattura' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaAutofattura.fat_ncColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property datainvio() As Date
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaAutofattura.datainvioColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'datainvio' nella tabella 'dtFatturaAutofattura' è DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaAutofattura.datainvioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property note() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaAutofattura.noteColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'note' nella tabella 'dtFatturaAutofattura' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaAutofattura.noteColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property DT_aziendaRow() As DT_aziendaRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("DT_azienda_dtFatturaAutofattura")),DT_aziendaRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("DT_azienda_dtFatturaAutofattura"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaAutofattura.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetidNull()
            Me(Me.tabledtFatturaAutofattura.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfat_num_daNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaAutofattura.fat_num_daColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfat_num_daNull()
            Me(Me.tabledtFatturaAutofattura.fat_num_daColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfat_cli_idNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaAutofattura.fat_cli_idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfat_cli_idNull()
            Me(Me.tabledtFatturaAutofattura.fat_cli_idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfat_dataNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaAutofattura.fat_dataColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfat_dataNull()
            Me(Me.tabledtFatturaAutofattura.fat_dataColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfat_scadNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaAutofattura.fat_scadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfat_scadNull()
            Me(Me.tabledtFatturaAutofattura.fat_scadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfat_pagaNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaAutofattura.fat_pagaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfat_pagaNull()
            Me(Me.tabledtFatturaAutofattura.fat_pagaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfat_pa_datNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaAutofattura.fat_pa_datColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfat_pa_datNull()
            Me(Me.tabledtFatturaAutofattura.fat_pa_datColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfat_pa_desNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaAutofattura.fat_pa_desColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfat_pa_desNull()
            Me(Me.tabledtFatturaAutofattura.fat_pa_desColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfat_cod_ivaNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaAutofattura.fat_cod_ivaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfat_cod_ivaNull()
            Me(Me.tabledtFatturaAutofattura.fat_cod_ivaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfat_cod_pagaNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaAutofattura.fat_cod_pagaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfat_cod_pagaNull()
            Me(Me.tabledtFatturaAutofattura.fat_cod_pagaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Isfat_ncNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaAutofattura.fat_ncColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setfat_ncNull()
            Me(Me.tabledtFatturaAutofattura.fat_ncColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsdatainvioNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaAutofattura.datainvioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetdatainvioNull()
            Me(Me.tabledtFatturaAutofattura.datainvioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsnoteNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaAutofattura.noteColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetnoteNull()
            Me(Me.tabledtFatturaAutofattura.noteColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function GetdtFatturaRigheAutofatturaRows() As dtFatturaRigheAutofatturaRow()
            If (Me.Table.ChildRelations("dtFatturaAutofattura_dtFatturaRigheAutofattura") Is Nothing) Then
                Return New dtFatturaRigheAutofatturaRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("dtFatturaAutofattura_dtFatturaRigheAutofattura")),dtFatturaRigheAutofatturaRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class dtFatturaRigheAutofatturaRow
        Inherits Global.System.Data.DataRow
        
        Private tabledtFatturaRigheAutofattura As dtFatturaRigheAutofatturaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tabledtFatturaRigheAutofattura = CType(Me.Table,dtFatturaRigheAutofatturaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property id() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaRigheAutofattura.idColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'id' nella tabella 'dtFatturaRigheAutofattura' è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaRigheAutofattura.idColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ordine() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaRigheAutofattura.ordineColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'ordine' nella tabella 'dtFatturaRigheAutofattura' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaRigheAutofattura.ordineColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_fa_num() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaRigheAutofattura.cfa_fa_numColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cfa_fa_num' nella tabella 'dtFatturaRigheAutofattura' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaRigheAutofattura.cfa_fa_numColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_des() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaRigheAutofattura.cfa_desColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cfa_des' nella tabella 'dtFatturaRigheAutofattura' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaRigheAutofattura.cfa_desColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_quanti() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaRigheAutofattura.cfa_quantiColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cfa_quanti' nella tabella 'dtFatturaRigheAutofattura' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaRigheAutofattura.cfa_quantiColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_prezzo() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaRigheAutofattura.cfa_prezzoColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cfa_prezzo' nella tabella 'dtFatturaRigheAutofattura' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaRigheAutofattura.cfa_prezzoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_sconto() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaRigheAutofattura.cfa_scontoColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cfa_sconto' nella tabella 'dtFatturaRigheAutofattura' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaRigheAutofattura.cfa_scontoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_iva() As Double
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaRigheAutofattura.cfa_ivaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cfa_iva' nella tabella 'dtFatturaRigheAutofattura' è DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaRigheAutofattura.cfa_ivaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_iddest() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaRigheAutofattura.cfa_iddestColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cfa_iddest' nella tabella 'dtFatturaRigheAutofattura' è "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaRigheAutofattura.cfa_iddestColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_idcli() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaRigheAutofattura.cfa_idcliColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cfa_idcli' nella tabella 'dtFatturaRigheAutofattura' è D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaRigheAutofattura.cfa_idcliColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_pulofor() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaRigheAutofattura.cfa_puloforColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cfa_pulofor' nella tabella 'dtFatturaRigheAutofattura' è"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaRigheAutofattura.cfa_puloforColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_dataunica() As String
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaRigheAutofattura.cfa_dataunicaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cfa_dataunica' nella tabella 'dtFatturaRigheAutofattura'"& _ 
                            " è DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaRigheAutofattura.cfa_dataunicaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_rc() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaRigheAutofattura.cfa_rcColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cfa_rc' nella tabella 'dtFatturaRigheAutofattura' è DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaRigheAutofattura.cfa_rcColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property cfa_tipo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tabledtFatturaRigheAutofattura.cfa_tipoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("Il valore della colonna 'cfa_tipo' nella tabella 'dtFatturaRigheAutofattura' è DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tabledtFatturaRigheAutofattura.cfa_tipoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property dtFatturaAutofatturaRow() As dtFatturaAutofatturaRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("dtFatturaAutofattura_dtFatturaRigheAutofattura")),dtFatturaAutofatturaRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("dtFatturaAutofattura_dtFatturaRigheAutofattura"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsidNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaRigheAutofattura.idColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetidNull()
            Me(Me.tabledtFatturaRigheAutofattura.idColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function IsordineNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaRigheAutofattura.ordineColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub SetordineNull()
            Me(Me.tabledtFatturaRigheAutofattura.ordineColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscfa_fa_numNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaRigheAutofattura.cfa_fa_numColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcfa_fa_numNull()
            Me(Me.tabledtFatturaRigheAutofattura.cfa_fa_numColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscfa_desNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaRigheAutofattura.cfa_desColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcfa_desNull()
            Me(Me.tabledtFatturaRigheAutofattura.cfa_desColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscfa_quantiNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaRigheAutofattura.cfa_quantiColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcfa_quantiNull()
            Me(Me.tabledtFatturaRigheAutofattura.cfa_quantiColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscfa_prezzoNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaRigheAutofattura.cfa_prezzoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcfa_prezzoNull()
            Me(Me.tabledtFatturaRigheAutofattura.cfa_prezzoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscfa_scontoNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaRigheAutofattura.cfa_scontoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcfa_scontoNull()
            Me(Me.tabledtFatturaRigheAutofattura.cfa_scontoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscfa_ivaNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaRigheAutofattura.cfa_ivaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcfa_ivaNull()
            Me(Me.tabledtFatturaRigheAutofattura.cfa_ivaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscfa_iddestNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaRigheAutofattura.cfa_iddestColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcfa_iddestNull()
            Me(Me.tabledtFatturaRigheAutofattura.cfa_iddestColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscfa_idcliNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaRigheAutofattura.cfa_idcliColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcfa_idcliNull()
            Me(Me.tabledtFatturaRigheAutofattura.cfa_idcliColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscfa_puloforNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaRigheAutofattura.cfa_puloforColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcfa_puloforNull()
            Me(Me.tabledtFatturaRigheAutofattura.cfa_puloforColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscfa_dataunicaNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaRigheAutofattura.cfa_dataunicaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcfa_dataunicaNull()
            Me(Me.tabledtFatturaRigheAutofattura.cfa_dataunicaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscfa_rcNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaRigheAutofattura.cfa_rcColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcfa_rcNull()
            Me(Me.tabledtFatturaRigheAutofattura.cfa_rcColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Function Iscfa_tipoNull() As Boolean
            Return Me.IsNull(Me.tabledtFatturaRigheAutofattura.cfa_tipoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub Setcfa_tipoNull()
            Me(Me.tabledtFatturaRigheAutofattura.cfa_tipoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class DT_fatturaFERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DT_fatturaFERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As DT_fatturaFERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As DT_fatturaFERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class DT_righeFERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DT_righeFERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As DT_righeFERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As DT_righeFERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class DT_sommeFERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DT_sommeFERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As DT_sommeFERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As DT_sommeFERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class DT_trasmittenteRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DT_trasmittenteRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As DT_trasmittenteRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As DT_trasmittenteRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class DT_aziendaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DT_aziendaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As DT_aziendaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As DT_aziendaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtCodici_TDRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtCodici_TDRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtCodici_TDRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtCodici_TDRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtEsteriRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtEsteriRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtEsteriRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtEsteriRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtFatturaAutofatturaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtFatturaAutofatturaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtFatturaAutofatturaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtFatturaAutofatturaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
    Public Class dtFatturaRigheAutofatturaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As dtFatturaRigheAutofatturaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New(ByVal row As dtFatturaRigheAutofatturaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Row() As dtFatturaRigheAutofatturaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DS_FETableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TA_fatturaFE
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DT_fatturaFE"
            tableMapping.ColumnMappings.Add("fat_num_da", "fat_num_da")
            tableMapping.ColumnMappings.Add("fat_cli_id", "fat_cli_id")
            tableMapping.ColumnMappings.Add("fat_data", "fat_data")
            tableMapping.ColumnMappings.Add("fat_scad", "fat_scad")
            tableMapping.ColumnMappings.Add("fat_cod_iva", "fat_cod_iva")
            tableMapping.ColumnMappings.Add("societa", "societa")
            tableMapping.ColumnMappings.Add("address", "address")
            tableMapping.ColumnMappings.Add("postalcode", "postalcode")
            tableMapping.ColumnMappings.Add("city", "city")
            tableMapping.ColumnMappings.Add("region", "region")
            tableMapping.ColumnMappings.Add("state", "state")
            tableMapping.ColumnMappings.Add("email_name", "email_name")
            tableMapping.ColumnMappings.Add("partitaiva", "partitaiva")
            tableMapping.ColumnMappings.Add("condomino", "condomino")
            tableMapping.ColumnMappings.Add("114_codicedestinatario", "114_codicedestinatario")
            tableMapping.ColumnMappings.Add("116_pecdestinatario", "116_pecdestinatario")
            tableMapping.ColumnMappings.Add("cf", "cf")
            tableMapping.ColumnMappings.Add("des", "des")
            tableMapping.ColumnMappings.Add("bancaappog", "bancaappog")
            tableMapping.ColumnMappings.Add("modalitaFE", "modalitaFE")
            tableMapping.ColumnMappings.Add("ricerca", "ricerca")
            tableMapping.ColumnMappings.Add("fat_nc", "fat_nc")
            tableMapping.ColumnMappings.Add("pa", "pa")
            tableMapping.ColumnMappings.Add("l_mobile", "l_mobile")
            tableMapping.ColumnMappings.Add("idfatturaunq", "idfatturaunq")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PoP2.Comuni.My.MySettings.Default.imp_est
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        fattura.fat_num_da, fattura.fat_cli_id, fattura.fat_data, fattura.f"& _ 
                "at_scad, fattura.fat_cod_iva, cantieri.societa, cantieri.address, cantieri.posta"& _ 
                "lcode, cantieri.city, cantieri.region, cantieri.state, cantieri.email_name, cant"& _ 
                "ieri.partitaiva, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"cantieri.l_mobile,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"cantieri.mobile_phone AS cf, cantieri.con"& _ 
                "domino, cantieri_FE.`114_codicedestinatario`, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"cantieri_FE.`116_pecdestinatario"& _ 
                "`, pagamenti.des, cantieri.bancaappog, pagamenti.modalitaFE,concat(fattura.fat_n"& _ 
                "um_da,societa) as ricerca,fattura.fat_nc,cantieri.pa,fattura.idfatturaunq"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FRO"& _ 
                "M            fattura, pagamenti,cantieri,cantieri_FE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        fattura.fat_c"& _ 
                "li_id = cantieri.id "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND fattura.fat_cod_paga = pagamenti.id"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND cantieri_FE.i"& _ 
                "d_cli  = fattura.fat_cli_id"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY fattura.idfatturaunq"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        fattura.fat_num_da, fattura.fat_cli_id, fattura.fat_data, fattura.f"& _ 
                "at_scad, fattura.fat_cod_iva, cantieri.societa, cantieri.address, cantieri.posta"& _ 
                "lcode, cantieri.city, cantieri.region, cantieri.state, cantieri.email_name, cant"& _ 
                "ieri.partitaiva, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"cantieri.l_mobile,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"cantieri.mobile_phone AS cf, cantieri.con"& _ 
                "domino, cantieri_FE.`114_codicedestinatario`, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"cantieri_FE.`116_pecdestinatario"& _ 
                "`, pagamenti.des, cantieri.bancaappog, pagamenti.modalitaFE,concat(fattura.fat_n"& _ 
                "um_da,societa) as ricerca,fattura.fat_nc,cantieri.pa,fattura.idfatturaunq"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM "& _ 
                "           fattura, pagamenti,cantieri,cantieri_FE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        fattura.fat_cli"& _ 
                "_id = cantieri.id "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND fattura.fat_cod_paga = pagamenti.id"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND  cantieri_FE.id"& _ 
                "_cli = fattura.fat_cli_id"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND fattura.idfatturaunq = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY fattura.idfatt"& _ 
                "uraunq"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("idfatturaunq", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "idfatturaunq", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        fattura.fat_num_da, fattura.fat_cli_id, fattura.fat_data, fattura.f"& _ 
                "at_scad, fattura.fat_cod_iva, cantieri.societa, cantieri.address, cantieri.posta"& _ 
                "lcode, cantieri.city, cantieri.region, cantieri.state, cantieri.email_name, cant"& _ 
                "ieri.partitaiva, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"cantieri.l_mobile,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"cantieri.mobile_phone AS cf, cantieri.con"& _ 
                "domino, cantieri_FE.`114_codicedestinatario`, cantieri_FE.`116_pecdestinatario`,"& _ 
                " pagamenti.des, cantieri.bancaappog, pagamenti.modalitaFE,concat(fattura.fat_num"& _ 
                "_da,societa) as ricerca, fattura.fat_nc,cantieri.pa,fattura.idfatturaunq"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM  "& _ 
                "          fattura, pagamenti, { oj cantieri LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      cantieri_FE ON cantieri.id = cantieri_FE.id_cli }"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        fattura.fa"& _ 
                "t_cli_id = cantieri.id AND fattura.fat_cod_paga = pagamenti.id AND (DATE_FORMAT("& _ 
                "fattura.fat_data, '%Y-%m') = ?)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY fattura.idfatturaunq"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param1", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_FE.DT_fatturaFEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByid(ByVal dataTable As DS_FE.DT_fatturaFEDataTable, ByVal idfatturaunq As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (idfatturaunq.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(idfatturaunq.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPERIODO(ByVal dataTable As DS_FE.DT_fatturaFEDataTable, ByVal Param1 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TA_righeFE
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DT_righeFE"
            tableMapping.ColumnMappings.Add("ordine", "ordine")
            tableMapping.ColumnMappings.Add("cfa_des", "cfa_des")
            tableMapping.ColumnMappings.Add("cfa_quanti", "cfa_quanti")
            tableMapping.ColumnMappings.Add("cfa_prezzo", "cfa_prezzo")
            tableMapping.ColumnMappings.Add("cfa_sconto", "cfa_sconto")
            tableMapping.ColumnMappings.Add("cfa_pulofor", "cfa_pulofor")
            tableMapping.ColumnMappings.Add("cfa_fa_num", "cfa_fa_num")
            tableMapping.ColumnMappings.Add("nome", "nome")
            tableMapping.ColumnMappings.Add("nomebreve", "nomebreve")
            tableMapping.ColumnMappings.Add("descrizione", "descrizione")
            tableMapping.ColumnMappings.Add("valoreiva", "valoreiva")
            tableMapping.ColumnMappings.Add("pagata", "pagata")
            tableMapping.ColumnMappings.Add("cod_FE", "cod_FE")
            tableMapping.ColumnMappings.Add("iva", "iva")
            tableMapping.ColumnMappings.Add("cod_iva", "cod_iva")
            tableMapping.ColumnMappings.Add("fat_data", "fat_data")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PoP2.Comuni.My.MySettings.Default.imp_est
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        fattura_righe.cfa_fa_num, fattura_righe.ordine, fattura_righe.cfa_d"& _ 
                "es, fattura_righe.cfa_quanti, fattura_righe.cfa_prezzo, fattura_righe.cfa_sconto"& _ 
                ", fattura_righe.cfa_iva as iva, fattura_righe.cfa_pulofor, fattura_righe.cfa_rc "& _ 
                "as cod_iva,  iva_codici.nome, iva_codici.nomebreve, iva_codici.descrizione, iva_"& _ 
                "codici.valoreiva, iva_codici.pagata, iva_codici.cod_FE,fattura.fat_data"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM   "& _ 
                "         fattura_righe "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN iva_codici ON fattura_righe.cfa_rc = iva_codi"& _ 
                "ci.codiceiva"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN fattura ON fattura_righe.cfa_fa_num = fattura.fat_num_da"& _ 
                ""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        fattura_righe.cfa_fa_num, fattura_righe.ordine, fattura_righe.cfa_d"& _ 
                "es, fattura_righe.cfa_quanti, fattura_righe.cfa_prezzo, fattura_righe.cfa_sconto"& _ 
                ", fattura_righe.cfa_iva as iva, fattura_righe.cfa_pulofor, fattura_righe.cfa_rc "& _ 
                "as cod_iva, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         iva_codici.nome, iva_codici.nomebreve, iv"& _ 
                "a_codici.descrizione, iva_codici.valoreiva, iva_codici.pagata, iva_codici.cod_FE"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            { oj fattura_righe LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         i"& _ 
                "va_codici ON fattura_righe.cfa_rc = iva_codici.codiceiva }"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE fattura_righe."& _ 
                "cfa_fa_num = ?"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_fa_num", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cfa_fa_num", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        fattura_righe.cfa_fa_num, fattura_righe.ordine, fattura_righe.cfa_d"& _ 
                "es, fattura_righe.cfa_quanti, fattura_righe.cfa_prezzo, fattura_righe.cfa_sconto"& _ 
                ", fattura_righe.cfa_iva as iva, fattura_righe.cfa_pulofor, fattura_righe.cfa_rc "& _ 
                "as cod_iva,  iva_codici.nome, iva_codici.nomebreve, iva_codici.descrizione, iva_"& _ 
                "codici.valoreiva, iva_codici.pagata, iva_codici.cod_FE,fattura.fat_data"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM   "& _ 
                "         fattura_righe "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN iva_codici ON fattura_righe.cfa_rc = iva_codi"& _ 
                "ci.codiceiva"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN fattura ON fattura_righe.cfa_fa_num = fattura.fat_num_da"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE DATE_FORMAT(fattura.fat_data,'%Y-%m') = ?"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param1", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_FE.DT_righeFEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBynumerofattura(ByVal dataTable As DS_FE.DT_righeFEDataTable, ByVal cfa_fa_num As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (cfa_fa_num Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cfa_fa_num")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(cfa_fa_num,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPeriodo(ByVal dataTable As DS_FE.DT_righeFEDataTable, ByVal Param1 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TA_sommaFE
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DT_sommeFE"
            tableMapping.ColumnMappings.Add("totale", "totale")
            tableMapping.ColumnMappings.Add("scontato", "scontato")
            tableMapping.ColumnMappings.Add("imposta", "imposta")
            tableMapping.ColumnMappings.Add("cfa_fa_num", "cfa_fa_num")
            tableMapping.ColumnMappings.Add("cfa_rc", "cfa_rc")
            tableMapping.ColumnMappings.Add("descrizione", "descrizione")
            tableMapping.ColumnMappings.Add("valoreiva", "valoreiva")
            tableMapping.ColumnMappings.Add("cod_FE", "cod_FE")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PoP2.Comuni.My.MySettings.Default.imp_est
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(fattura_righe.cfa_quanti * fattura_righe.cfa_prezzo) AS totale,"& _ 
                " SUM((fattura_righe.cfa_quanti * fattura_righe.cfa_prezzo) * (1 - fattura_righe."& _ 
                "cfa_sconto / 100)) AS scontato, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(((fattura_righe.c"& _ 
                "fa_quanti * fattura_righe.cfa_prezzo) * (1 - fattura_righe.cfa_sconto / 100)) * "& _ 
                "(iva_codici.valoreiva / 100)) AS imposta, fattura_righe.cfa_fa_num,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"fattura_rig"& _ 
                "he.cfa_rc, iva_codici.descrizione, iva_codici.valoreiva, iva_codici.cod_FE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM"& _ 
                "            fattura_righe"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN iva_codici on      fattura_righe.cfa_rc "& _ 
                "= iva_codici.codiceiva"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY iva_codici.valoreiva, fattura_righe.cfa_fa_nu"& _ 
                "m"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        SUM(fattura_righe.cfa_quanti * fattura_righe.cfa_prezzo) AS totale,"& _ 
                " SUM((fattura_righe.cfa_quanti * fattura_righe.cfa_prezzo) * (1 - fattura_righe."& _ 
                "cfa_sconto / 100)) AS scontato, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(((fattura_righe.c"& _ 
                "fa_quanti * fattura_righe.cfa_prezzo) * (1 - fattura_righe.cfa_sconto / 100)) * "& _ 
                "(iva_codici.valoreiva / 100)) AS imposta, fattura_righe.cfa_fa_num,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"fattura_rig"& _ 
                "he.cfa_rc, iva_codici.descrizione, iva_codici.valoreiva, iva_codici.cod_FE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM"& _ 
                "            fattura_righe"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"INNER JOIN iva_codici on  fattura_righe.cfa_rc = iv"& _ 
                "a_codici.codiceiva"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE fattura_righe.cfa_fa_num = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY fattura_righe.c"& _ 
                "fa_rc"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_fa_num", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cfa_fa_num", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        SUM(fattura_righe.cfa_quanti * fattura_righe.cfa_prezzo) AS totale,"& _ 
                " SUM((fattura_righe.cfa_quanti * fattura_righe.cfa_prezzo) * (1 - fattura_righe."& _ 
                "cfa_sconto / 100)) AS scontato, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(((fattura_righe.c"& _ 
                "fa_quanti * fattura_righe.cfa_prezzo) * (1 - fattura_righe.cfa_sconto / 100)) * "& _ 
                "(iva_codici.valoreiva / 100)) AS imposta, fattura_righe.cfa_fa_num,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"fattura_rig"& _ 
                "he.cfa_rc, iva_codici.descrizione, iva_codici.valoreiva, iva_codici.cod_FE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM"& _ 
                "            fattura_righe"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"LEFT JOIN iva_codici on      fattura_righe.cfa_rc ="& _ 
                " iva_codici.codiceiva"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE DATE_FORMAT(fattura_righe.cfa_dataunica,'%Y-%m') = "& _ 
                "?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY iva_codici.valoreiva, fattura_righe.cfa_fa_num"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param1", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_FE.DT_sommeFEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByIDFattura(ByVal dataTable As DS_FE.DT_sommeFEDataTable, ByVal cfa_fa_num As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (cfa_fa_num Is Nothing) Then
                Throw New Global.System.ArgumentNullException("cfa_fa_num")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(cfa_fa_num,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPeriodo(ByVal dataTable As DS_FE.DT_sommeFEDataTable, ByVal Param1 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Param1,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TA_trasmittente
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DT_trasmittente"
            tableMapping.ColumnMappings.Add("id", "id")
            tableMapping.ColumnMappings.Add("idPaese", "idPaese")
            tableMapping.ColumnMappings.Add("idCodice", "idCodice")
            tableMapping.ColumnMappings.Add("Telefono", "Telefono")
            tableMapping.ColumnMappings.Add("Email", "Email")
            tableMapping.ColumnMappings.Add("Nominativo", "Nominativo")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PoP2.Comuni.My.MySettings.Default.imp_est
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        trasmittente_FE.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            trasmittente_FE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_FE.DT_trasmittenteDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TA_azienda
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "DT_azienda"
            tableMapping.ColumnMappings.Add("id", "id")
            tableMapping.ColumnMappings.Add("ragione_sociale", "ragione_sociale")
            tableMapping.ColumnMappings.Add("indirizzo_leg", "indirizzo_leg")
            tableMapping.ColumnMappings.Add("localita_leg", "localita_leg")
            tableMapping.ColumnMappings.Add("cap_leg", "cap_leg")
            tableMapping.ColumnMappings.Add("provincia_leg", "provincia_leg")
            tableMapping.ColumnMappings.Add("indirizzo_ope", "indirizzo_ope")
            tableMapping.ColumnMappings.Add("localita_ope", "localita_ope")
            tableMapping.ColumnMappings.Add("cap_ope", "cap_ope")
            tableMapping.ColumnMappings.Add("provincia_ope", "provincia_ope")
            tableMapping.ColumnMappings.Add("valore_IVA", "valore_IVA")
            tableMapping.ColumnMappings.Add("valore_ritenuta", "valore_ritenuta")
            tableMapping.ColumnMappings.Add("logo_grande", "logo_grande")
            tableMapping.ColumnMappings.Add("logo_piccolo", "logo_piccolo")
            tableMapping.ColumnMappings.Add("partita_IVA", "partita_IVA")
            tableMapping.ColumnMappings.Add("cciaa", "cciaa")
            tableMapping.ColumnMappings.Add("codicefiscale", "codicefiscale")
            tableMapping.ColumnMappings.Add("capitale_cap", "capitale_cap")
            tableMapping.ColumnMappings.Add("data_attivita", "data_attivita")
            tableMapping.ColumnMappings.Add("Nazione", "Nazione")
            tableMapping.ColumnMappings.Add("autofatturazione", "autofatturazione")
            tableMapping.ColumnMappings.Add("idSDI", "idSDI")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PoP2.Comuni.My.MySettings.Default.imp_est
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(6) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        id, ragione_sociale, indirizzo_leg, localita_leg, cap_leg, provinci"& _ 
                "a_leg, indirizzo_ope, localita_ope, cap_ope, provincia_ope, valore_IVA, valore_r"& _ 
                "itenuta, logo_grande, logo_piccolo, partita_IVA, cciaa, codicefiscale, capitale_"& _ 
                "cap, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         data_attivita, Nazione, autofatturazione, idSDI"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            azienda"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM azienda"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (id = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        id, ragione_sociale, indirizzo_leg, localita_leg, cap_leg, provinci"& _ 
                "a_leg, indirizzo_ope, localita_ope, cap_ope, provincia_ope, valore_IVA, valore_r"& _ 
                "itenuta, logo_grande, logo_piccolo, partita_IVA, cciaa, codicefiscale, capitale_"& _ 
                "cap, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         data_attivita, Nazione, autofatturazione, idSDI"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            azienda"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE azienda.autofatturazione = 1"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        id, ragione_sociale, indirizzo_leg, localita_leg, cap_leg, provinci"& _ 
                "a_leg, indirizzo_ope, localita_ope, cap_ope, provincia_ope, valore_IVA, valore_r"& _ 
                "itenuta, logo_grande, logo_piccolo, partita_IVA, cciaa, codicefiscale, capitale_"& _ 
                "cap, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         data_attivita, Nazione, autofatturazione, idSDI"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            azienda"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE azienda.autofatturazione = 0"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "INSERT INTO azienda"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (ragione_sociale, indirizzo_leg, lo"& _ 
                "calita_leg, cap_leg, provincia_leg, valore_IVA, valore_ritenuta, partita_IVA, co"& _ 
                "dicefiscale, Nazione, autofatturazione)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (?, ?, ?, ?, ?, ?, ?, ?, "& _ 
                "?, ?, ?)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ragione_sociale", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ragione_sociale", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("indirizzo_leg", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "indirizzo_leg", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("localita_leg", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "localita_leg", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cap_leg", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cap_leg", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("provincia_leg", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "provincia_leg", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("valore_IVA", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(5,Byte), CType(2,Byte), "valore_IVA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("valore_ritenuta", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(5,Byte), CType(2,Byte), "valore_ritenuta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("partita_IVA", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "partita_IVA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("codicefiscale", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "codicefiscale", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Nazione", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Nazione", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("autofatturazione", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "autofatturazione", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(5) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        max(id)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            azienda"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "UPDATE       azienda"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                ragione_sociale = ?, indirizzo_leg = ?, "& _ 
                "localita_leg = ?, cap_leg = ?, provincia_leg = ?, valore_IVA = ?, valore_ritenut"& _ 
                "a = ?, partita_IVA = ?, codicefiscale = ?, Nazione = ?, autofatturazione = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WH"& _ 
                "ERE id  = ?"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ragione_sociale", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ragione_sociale", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("indirizzo_leg", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "indirizzo_leg", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("localita_leg", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "localita_leg", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cap_leg", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cap_leg", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("provincia_leg", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "provincia_leg", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("valore_IVA", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(5,Byte), CType(2,Byte), "valore_IVA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("valore_ritenuta", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(5,Byte), CType(2,Byte), "valore_ritenuta", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("partita_IVA", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "partita_IVA", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("codicefiscale", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "codicefiscale", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Nazione", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "Nazione", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("autofatturazione", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "autofatturazione", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_FE.DT_aziendaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByAutofatturazione(ByVal dataTable As DS_FE.DT_aziendaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByAzienda(ByVal dataTable As DS_FE.DT_aziendaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteQuery(ByVal id As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(1)
            If (id.HasValue = true) Then
                command.Parameters(0).Value = CType(id.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal ragione_sociale As String, ByVal indirizzo_leg As String, ByVal localita_leg As String, ByVal cap_leg As String, ByVal provincia_leg As String, ByVal valore_IVA As Global.System.Nullable(Of Decimal), ByVal valore_ritenuta As Global.System.Nullable(Of Decimal), ByVal partita_IVA As String, ByVal codicefiscale As String, ByVal Nazione As String, ByVal autofatturazione As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(4)
            If (ragione_sociale Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(ragione_sociale,String)
            End If
            If (indirizzo_leg Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(indirizzo_leg,String)
            End If
            If (localita_leg Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(localita_leg,String)
            End If
            If (cap_leg Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(cap_leg,String)
            End If
            If (provincia_leg Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(provincia_leg,String)
            End If
            If (valore_IVA.HasValue = true) Then
                command.Parameters(5).Value = CType(valore_IVA.Value,Decimal)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (valore_ritenuta.HasValue = true) Then
                command.Parameters(6).Value = CType(valore_ritenuta.Value,Decimal)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (partita_IVA Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(partita_IVA,String)
            End If
            If (codicefiscale Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(codicefiscale,String)
            End If
            If (Nazione Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(Nazione,String)
            End If
            If (autofatturazione.HasValue = true) Then
                command.Parameters(10).Value = CType(autofatturazione.Value,Integer)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function UltimoID() As Global.System.Nullable(Of Integer)
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(5)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Integer)()
            Else
                Return New Global.System.Nullable(Of Integer)(CType(returnValue,Integer))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery(ByVal ragione_sociale As String, ByVal indirizzo_leg As String, ByVal localita_leg As String, ByVal cap_leg As String, ByVal provincia_leg As String, ByVal valore_IVA As Global.System.Nullable(Of Decimal), ByVal valore_ritenuta As Global.System.Nullable(Of Decimal), ByVal partita_IVA As String, ByVal codicefiscale As String, ByVal Nazione As String, ByVal autofatturazione As Global.System.Nullable(Of Integer), ByVal Original_id As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(6)
            If (ragione_sociale Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(ragione_sociale,String)
            End If
            If (indirizzo_leg Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(indirizzo_leg,String)
            End If
            If (localita_leg Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(localita_leg,String)
            End If
            If (cap_leg Is Nothing) Then
                command.Parameters(3).Value = Global.System.DBNull.Value
            Else
                command.Parameters(3).Value = CType(cap_leg,String)
            End If
            If (provincia_leg Is Nothing) Then
                command.Parameters(4).Value = Global.System.DBNull.Value
            Else
                command.Parameters(4).Value = CType(provincia_leg,String)
            End If
            If (valore_IVA.HasValue = true) Then
                command.Parameters(5).Value = CType(valore_IVA.Value,Decimal)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (valore_ritenuta.HasValue = true) Then
                command.Parameters(6).Value = CType(valore_ritenuta.Value,Decimal)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (partita_IVA Is Nothing) Then
                command.Parameters(7).Value = Global.System.DBNull.Value
            Else
                command.Parameters(7).Value = CType(partita_IVA,String)
            End If
            If (codicefiscale Is Nothing) Then
                command.Parameters(8).Value = Global.System.DBNull.Value
            Else
                command.Parameters(8).Value = CType(codicefiscale,String)
            End If
            If (Nazione Is Nothing) Then
                command.Parameters(9).Value = Global.System.DBNull.Value
            Else
                command.Parameters(9).Value = CType(Nazione,String)
            End If
            If (autofatturazione.HasValue = true) Then
                command.Parameters(10).Value = CType(autofatturazione.Value,Integer)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_id.HasValue = true) Then
                command.Parameters(11).Value = CType(Original_id.Value,Integer)
            Else
                command.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class taCodici_TD
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtCodici_TD"
            tableMapping.ColumnMappings.Add("id", "id")
            tableMapping.ColumnMappings.Add("valore", "valore")
            tableMapping.ColumnMappings.Add("descrizione", "descrizione")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PoP2.Comuni.My.MySettings.Default.imp_est
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        td.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            codici_td_FE td"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_FE.dtCodici_TDDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class taEsteri
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtEsteri"
            tableMapping.ColumnMappings.Add("id", "id")
            tableMapping.ColumnMappings.Add("societa", "societa")
            tableMapping.ColumnMappings.Add("address", "address")
            tableMapping.ColumnMappings.Add("postalcode", "postalcode")
            tableMapping.ColumnMappings.Add("city", "city")
            tableMapping.ColumnMappings.Add("region", "region")
            tableMapping.ColumnMappings.Add("state", "state")
            tableMapping.ColumnMappings.Add("email_name", "email_name")
            tableMapping.ColumnMappings.Add("partitaiva", "partitaiva")
            tableMapping.ColumnMappings.Add("pagamento", "pagamento")
            tableMapping.ColumnMappings.Add("bancaappog", "bancaappog")
            tableMapping.ColumnMappings.Add("attivo", "attivo")
            tableMapping.ColumnMappings.Add("data_creazione", "data_creazione")
            tableMapping.ColumnMappings.Add("id_az", "id_az")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PoP2.Comuni.My.MySettings.Default.imp_est
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "select e.*"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM esteri_FE e"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_FE.dtEsteriDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class taFatturaAutofattura
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtFatturaAutofattura"
            tableMapping.ColumnMappings.Add("id", "id")
            tableMapping.ColumnMappings.Add("fat_num_da", "fat_num_da")
            tableMapping.ColumnMappings.Add("fat_cli_id", "fat_cli_id")
            tableMapping.ColumnMappings.Add("fat_data", "fat_data")
            tableMapping.ColumnMappings.Add("fat_scad", "fat_scad")
            tableMapping.ColumnMappings.Add("fat_paga", "fat_paga")
            tableMapping.ColumnMappings.Add("fat_pa_dat", "fat_pa_dat")
            tableMapping.ColumnMappings.Add("fat_pa_des", "fat_pa_des")
            tableMapping.ColumnMappings.Add("fat_cod_iva", "fat_cod_iva")
            tableMapping.ColumnMappings.Add("fat_cod_paga", "fat_cod_paga")
            tableMapping.ColumnMappings.Add("fat_nc", "fat_nc")
            tableMapping.ColumnMappings.Add("datainvio", "datainvio")
            tableMapping.ColumnMappings.Add("note", "note")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PoP2.Comuni.My.MySettings.Default.imp_est
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(6) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT f.* FROM fattura_autofattura f"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM fattura_autofattura"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE id = ?"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT f.* FROM fattura_autofattura f"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE f.id = ?"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO fattura_autofattura"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (fat_num_da, fat_cli_id"& _ 
                ", fat_data, fat_scad, fat_paga, fat_pa_dat, fat_pa_des,  fat_cod_iva, fat_cod_pa"& _ 
                "ga, fat_nc,  datainvio, note)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?"& _ 
                ")"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_num_da", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_num_da", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_cli_id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_cli_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_data", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_data", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_scad", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_scad", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_paga", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_paga", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_pa_dat", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_pa_dat", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_pa_des", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_pa_des", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_cod_iva", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_cod_iva", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_cod_paga", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_cod_paga", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_nc", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_nc", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("datainvio", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "datainvio", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("note", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "note", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT max(f.id) FROM fattura_autofattura f"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT       MAX(SUBSTRING(SUBSTRING_INDEX(f.fat_num_da, '/', 1),2,6)) as ultimo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            fattura_autofattura f"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE DATE_FORMAT(f.fat_data,'%Y') = ?"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Param1", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "UPDATE       fattura_autofattura"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                fat_num_da = ?, fat_cli_id ="& _ 
                " ?, fat_data = ?, fat_scad = ?, fat_paga = ?, fat_pa_dat = ?, fat_pa_des = ?,  f"& _ 
                "at_cod_iva = ?, fat_cod_paga = ?, fat_nc = ?, datainvio = ?, note = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE    "& _ 
                "    (id = ?)"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_num_da", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_num_da", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_cli_id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_cli_id", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_data", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_data", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_scad", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_scad", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_paga", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_paga", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_pa_dat", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_pa_dat", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_pa_des", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_pa_des", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_cod_iva", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_cod_iva", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_cod_paga", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_cod_paga", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("fat_nc", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "fat_nc", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("datainvio", Global.System.Data.Odbc.OdbcType.[Date], 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "datainvio", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("note", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "note", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_FE.dtFatturaAutofatturaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByID(ByVal dataTable As DS_FE.dtFatturaAutofatturaDataTable, ByVal id As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (id.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(id.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteQuery(ByVal id As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(1)
            If (id.HasValue = true) Then
                command.Parameters(0).Value = CType(id.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal fat_num_da As String, ByVal fat_cli_id As Global.System.Nullable(Of Integer), ByVal fat_data As Global.System.Nullable(Of Date), ByVal fat_scad As Global.System.Nullable(Of Date), ByVal fat_paga As Global.System.Nullable(Of Integer), ByVal fat_pa_dat As Global.System.Nullable(Of Date), ByVal fat_pa_des As String, ByVal fat_cod_iva As Global.System.Nullable(Of Integer), ByVal fat_cod_paga As Global.System.Nullable(Of Integer), ByVal fat_nc As Global.System.Nullable(Of Integer), ByVal datainvio As Global.System.Nullable(Of Date), ByVal note As String) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(3)
            If (fat_num_da Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(fat_num_da,String)
            End If
            If (fat_cli_id.HasValue = true) Then
                command.Parameters(1).Value = CType(fat_cli_id.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (fat_data.HasValue = true) Then
                command.Parameters(2).Value = CType(fat_data.Value,Date)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (fat_scad.HasValue = true) Then
                command.Parameters(3).Value = CType(fat_scad.Value,Date)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (fat_paga.HasValue = true) Then
                command.Parameters(4).Value = CType(fat_paga.Value,Integer)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (fat_pa_dat.HasValue = true) Then
                command.Parameters(5).Value = CType(fat_pa_dat.Value,Date)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (fat_pa_des Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(fat_pa_des,String)
            End If
            If (fat_cod_iva.HasValue = true) Then
                command.Parameters(7).Value = CType(fat_cod_iva.Value,Integer)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (fat_cod_paga.HasValue = true) Then
                command.Parameters(8).Value = CType(fat_cod_paga.Value,Integer)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (fat_nc.HasValue = true) Then
                command.Parameters(9).Value = CType(fat_nc.Value,Integer)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (datainvio.HasValue = true) Then
                command.Parameters(10).Value = CType(datainvio.Value,Date)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (note Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(note,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function ultimoID() As Object
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(4)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function UltimonumeroFattura(ByVal Param1 As String) As Object
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(5)
            If (Param1 Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Param1")
            Else
                command.Parameters(0).Value = CType(Param1,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return Nothing
            Else
                Return CType(returnValue,Object)
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery(ByVal fat_num_da As String, ByVal fat_cli_id As Global.System.Nullable(Of Integer), ByVal fat_data As Global.System.Nullable(Of Date), ByVal fat_scad As Global.System.Nullable(Of Date), ByVal fat_paga As Global.System.Nullable(Of Integer), ByVal fat_pa_dat As Global.System.Nullable(Of Date), ByVal fat_pa_des As String, ByVal fat_cod_iva As Global.System.Nullable(Of Integer), ByVal fat_cod_paga As Global.System.Nullable(Of Integer), ByVal fat_nc As Global.System.Nullable(Of Integer), ByVal datainvio As Global.System.Nullable(Of Date), ByVal note As String, ByVal Original_id As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(6)
            If (fat_num_da Is Nothing) Then
                command.Parameters(0).Value = Global.System.DBNull.Value
            Else
                command.Parameters(0).Value = CType(fat_num_da,String)
            End If
            If (fat_cli_id.HasValue = true) Then
                command.Parameters(1).Value = CType(fat_cli_id.Value,Integer)
            Else
                command.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (fat_data.HasValue = true) Then
                command.Parameters(2).Value = CType(fat_data.Value,Date)
            Else
                command.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (fat_scad.HasValue = true) Then
                command.Parameters(3).Value = CType(fat_scad.Value,Date)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (fat_paga.HasValue = true) Then
                command.Parameters(4).Value = CType(fat_paga.Value,Integer)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (fat_pa_dat.HasValue = true) Then
                command.Parameters(5).Value = CType(fat_pa_dat.Value,Date)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (fat_pa_des Is Nothing) Then
                command.Parameters(6).Value = Global.System.DBNull.Value
            Else
                command.Parameters(6).Value = CType(fat_pa_des,String)
            End If
            If (fat_cod_iva.HasValue = true) Then
                command.Parameters(7).Value = CType(fat_cod_iva.Value,Integer)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (fat_cod_paga.HasValue = true) Then
                command.Parameters(8).Value = CType(fat_cod_paga.Value,Integer)
            Else
                command.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (fat_nc.HasValue = true) Then
                command.Parameters(9).Value = CType(fat_nc.Value,Integer)
            Else
                command.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (datainvio.HasValue = true) Then
                command.Parameters(10).Value = CType(datainvio.Value,Date)
            Else
                command.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (note Is Nothing) Then
                command.Parameters(11).Value = Global.System.DBNull.Value
            Else
                command.Parameters(11).Value = CType(note,String)
            End If
            If (Original_id.HasValue = true) Then
                command.Parameters(12).Value = CType(Original_id.Value,Integer)
            Else
                command.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class taFatturaRigheAutofattura
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.Odbc.OdbcDataAdapter
        
        Private _connection As Global.System.Data.Odbc.OdbcConnection
        
        Private _transaction As Global.System.Data.Odbc.OdbcTransaction
        
        Private _commandCollection() As Global.System.Data.Odbc.OdbcCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.Odbc.OdbcDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.Odbc.OdbcConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.Odbc.OdbcCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.Odbc.OdbcTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.Odbc.OdbcCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.Odbc.OdbcDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "dtFatturaRigheAutofattura"
            tableMapping.ColumnMappings.Add("id", "id")
            tableMapping.ColumnMappings.Add("ordine", "ordine")
            tableMapping.ColumnMappings.Add("cfa_fa_num", "cfa_fa_num")
            tableMapping.ColumnMappings.Add("cfa_des", "cfa_des")
            tableMapping.ColumnMappings.Add("cfa_quanti", "cfa_quanti")
            tableMapping.ColumnMappings.Add("cfa_prezzo", "cfa_prezzo")
            tableMapping.ColumnMappings.Add("cfa_sconto", "cfa_sconto")
            tableMapping.ColumnMappings.Add("cfa_iva", "cfa_iva")
            tableMapping.ColumnMappings.Add("cfa_iddest", "cfa_iddest")
            tableMapping.ColumnMappings.Add("cfa_idcli", "cfa_idcli")
            tableMapping.ColumnMappings.Add("cfa_pulofor", "cfa_pulofor")
            tableMapping.ColumnMappings.Add("cfa_dataunica", "cfa_dataunica")
            tableMapping.ColumnMappings.Add("cfa_rc", "cfa_rc")
            tableMapping.ColumnMappings.Add("cfa_tipo", "cfa_tipo")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.Odbc.OdbcConnection()
            Me._connection.ConnectionString = Global.PoP2.Comuni.My.MySettings.Default.imp_est
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.Odbc.OdbcCommand(4) {}
            Me._commandCollection(0) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        id, ordine, cfa_fa_num, cfa_des, cfa_quanti, cfa_prezzo, cfa_sconto"& _ 
                ", cfa_iva, cfa_iddest, cfa_idcli, cfa_pulofor, cfa_dataunica, cfa_rc, cfa_tipo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "FROM            fatture_righe_autofattura fr"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "DELETE FROM fatture_righe_autofattura"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (id = ?)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id", Global.System.Data.DataRowVersion.Original, false, Nothing))
            Me._commandCollection(2) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        id, ordine, cfa_fa_num, cfa_des, cfa_quanti, cfa_prezzo, cfa_sconto"& _ 
                ", cfa_iva, cfa_iddest, cfa_idcli, cfa_pulofor, cfa_dataunica, cfa_rc, cfa_tipo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "FROM            fatture_righe_autofattura fr"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (cfa_fa_num = ?)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_fa_num", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cfa_fa_num", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "INSERT INTO fatture_righe_autofattura"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (ordine, cfa_fa_n"& _ 
                "um, cfa_des, cfa_quanti, cfa_prezzo, cfa_sconto, cfa_rc)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"VALUES        (?, ?, ?"& _ 
                ", ?, ?, ?, ?)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ordine", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ordine", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_fa_num", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cfa_fa_num", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_des", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cfa_des", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_quanti", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(15,Byte), CType(0,Byte), "cfa_quanti", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_prezzo", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(15,Byte), CType(0,Byte), "cfa_prezzo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_sconto", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(15,Byte), CType(0,Byte), "cfa_sconto", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_rc", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cfa_rc", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4) = New Global.System.Data.Odbc.OdbcCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "UPDATE       fatture_righe_autofattura"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET                ordine = ?, cfa_fa_num"& _ 
                " = ?, cfa_des = ?, cfa_quanti = ?, cfa_prezzo = ?, cfa_sconto = ?, cfa_rc = ?"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"W"& _ 
                "HERE        (id = ?)"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("ordine", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "ordine", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_fa_num", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cfa_fa_num", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_des", Global.System.Data.Odbc.OdbcType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cfa_des", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_quanti", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(15,Byte), CType(0,Byte), "cfa_quanti", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_prezzo", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(15,Byte), CType(0,Byte), "cfa_prezzo", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_sconto", Global.System.Data.Odbc.OdbcType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, CType(15,Byte), CType(0,Byte), "cfa_sconto", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("cfa_rc", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "cfa_rc", Global.System.Data.DataRowVersion.Current, false, Nothing))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.Odbc.OdbcParameter("Original_id", Global.System.Data.Odbc.OdbcType.Int, 0, Global.System.Data.ParameterDirection.Input, CType(0,Byte), CType(0,Byte), "id", Global.System.Data.DataRowVersion.Original, false, Nothing))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DS_FE.dtFatturaRigheAutofatturaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBynumerofattura(ByVal dataTable As DS_FE.dtFatturaRigheAutofatturaDataTable, ByVal cfa_fa_num As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (cfa_fa_num Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(cfa_fa_num,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function DeleteQuery(ByVal id As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(1)
            If (id.HasValue = true) Then
                command.Parameters(0).Value = CType(id.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, false)>  _
        Public Overloads Overridable Function InsertQuery(ByVal ordine As Global.System.Nullable(Of Integer), ByVal cfa_fa_num As String, ByVal cfa_des As String, ByVal cfa_quanti As Global.System.Nullable(Of Decimal), ByVal cfa_prezzo As Global.System.Nullable(Of Decimal), ByVal cfa_sconto As Global.System.Nullable(Of Decimal), ByVal cfa_rc As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(3)
            If (ordine.HasValue = true) Then
                command.Parameters(0).Value = CType(ordine.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (cfa_fa_num Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(cfa_fa_num,String)
            End If
            If (cfa_des Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(cfa_des,String)
            End If
            If (cfa_quanti.HasValue = true) Then
                command.Parameters(3).Value = CType(cfa_quanti.Value,Decimal)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (cfa_prezzo.HasValue = true) Then
                command.Parameters(4).Value = CType(cfa_prezzo.Value,Decimal)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (cfa_sconto.HasValue = true) Then
                command.Parameters(5).Value = CType(cfa_sconto.Value,Decimal)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (cfa_rc.HasValue = true) Then
                command.Parameters(6).Value = CType(cfa_rc.Value,Integer)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function UpdateQuery(ByVal ordine As Global.System.Nullable(Of Integer), ByVal cfa_fa_num As String, ByVal cfa_des As String, ByVal cfa_quanti As Global.System.Nullable(Of Decimal), ByVal cfa_prezzo As Global.System.Nullable(Of Decimal), ByVal cfa_sconto As Global.System.Nullable(Of Decimal), ByVal cfa_rc As Global.System.Nullable(Of Integer), ByVal Original_id As Global.System.Nullable(Of Integer)) As Integer
            Dim command As Global.System.Data.Odbc.OdbcCommand = Me.CommandCollection(4)
            If (ordine.HasValue = true) Then
                command.Parameters(0).Value = CType(ordine.Value,Integer)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (cfa_fa_num Is Nothing) Then
                command.Parameters(1).Value = Global.System.DBNull.Value
            Else
                command.Parameters(1).Value = CType(cfa_fa_num,String)
            End If
            If (cfa_des Is Nothing) Then
                command.Parameters(2).Value = Global.System.DBNull.Value
            Else
                command.Parameters(2).Value = CType(cfa_des,String)
            End If
            If (cfa_quanti.HasValue = true) Then
                command.Parameters(3).Value = CType(cfa_quanti.Value,Decimal)
            Else
                command.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (cfa_prezzo.HasValue = true) Then
                command.Parameters(4).Value = CType(cfa_prezzo.Value,Decimal)
            Else
                command.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (cfa_sconto.HasValue = true) Then
                command.Parameters(5).Value = CType(cfa_sconto.Value,Decimal)
            Else
                command.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (cfa_rc.HasValue = true) Then
                command.Parameters(6).Value = CType(cfa_rc.Value,Integer)
            Else
                command.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_id.HasValue = true) Then
                command.Parameters(7).Value = CType(Original_id.Value,Integer)
            Else
                command.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DS_FE, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DS_FE, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DS_FE, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DS_FE) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager non contiene informazioni di connessione. Impostare la propri"& _ 
                        "età TableAdapter di ciascun oggetto TableAdapterManager su un'istanza TableAdapt"& _ 
                        "er valida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("Impossibile avviare la transazione. La connessione dati corrente non supporta le "& _ 
                        "transazioni oppure lo stato corrente non consente l'avvio della transazione.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "16.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
